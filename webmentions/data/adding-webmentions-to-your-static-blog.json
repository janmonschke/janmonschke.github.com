[
  {
    "type": "entry",
    "author": {
      "type": "card",
      "name": "Jan",
      "photo": "https://avatars.webmention.io/media.social.lol/94385a86d0a91df34c7b3f23d9433008ded38e5424efc65946b2e9fa4d288a77.jpg",
      "url": "https://social.lol/@janmon"
    },
    "url": "https://social.lol/@janmon/109777631384556985",
    "published": "2023-01-30T10:15:21",
    "wm-received": "2023-01-30T10:23:57Z",
    "wm-id": 1610313,
    "wm-source": "https://brid.gy/comment/mastodon/@janmon@social.lol/109777627702072379/109777631384556985",
    "wm-target": "https://janmonschke.com/adding-webmentions-to-your-static-blog/",
    "wm-protocol": "webmention",
    "content": {
      "html": "<p>Thanks to <span class=\"h-card\"><a href=\"https://bell.bz/@andy\" class=\"u-url\">@<span>andy</span></a></span> and <span class=\"h-card\"><a href=\"https://social.lol/@sophie\" class=\"u-url\">@<span>sophie</span></a></span> for the inspiration :)</p>",
      "text": "Thanks to @andy and @sophie for the inspiration :)"
    },
    "in-reply-to": "https://janmonschke.com/adding-webmentions-to-your-static-blog/",
    "wm-property": "in-reply-to",
    "wm-private": false
  },
  {
    "type": "entry",
    "author": {
      "type": "card",
      "name": "Juhis",
      "photo": "https://avatars.webmention.io/media.social.lol/4681b01a570ac17b6a3f8ec557578ff027e45fe9d79e5af6b39145bcece82dda.jpg",
      "url": "https://mastodon.world/@hamatti"
    },
    "url": "https://mastodon.world/@hamatti/109777741911560491",
    "published": "2023-01-30T10:43:27",
    "wm-received": "2023-01-30T11:14:40Z",
    "wm-id": 1610345,
    "wm-source": "https://brid.gy/comment/mastodon/@janmon@social.lol/109777627702072379/109777741960270672",
    "wm-target": "https://janmonschke.com/adding-webmentions-to-your-static-blog/",
    "wm-protocol": "webmention",
    "content": {
      "html": "<p><span class=\"h-card\"><a href=\"https://social.lol/@janmon\" class=\"u-url\">@<span>janmon</span></a></span> This was a great read, thanks for writing it! I've been thinking about adding webmentions to my site for a long while now but I've been put off by so many moving pieces (and integrations).</p><p>Maybe this week is the time I pick up that project!</p>",
      "text": "@janmon This was a great read, thanks for writing it! I've been thinking about adding webmentions to my site for a long while now but I've been put off by so many moving pieces (and integrations).Maybe this week is the time I pick up that project!"
    },
    "in-reply-to": "https://janmonschke.com/adding-webmentions-to-your-static-blog/",
    "wm-property": "in-reply-to",
    "wm-private": false
  },
  {
    "type": "entry",
    "author": {
      "type": "card",
      "name": "Rob Anderson",
      "photo": "https://avatars.webmention.io/media.social.lol/58f0928fe136e8aa8a4bdf0861137158f95a762dfd999fe963bc947539523076.jpg",
      "url": "https://hyem.tech/@rob"
    },
    "url": "https://social.lol/@janmon/109777627702072379#reblogged-by-109435415106206989",
    "published": null,
    "wm-received": "2023-01-30T11:14:40Z",
    "wm-id": 1610346,
    "wm-source": "https://brid.gy/repost/mastodon/@janmon@social.lol/109777627702072379/109435415106206989",
    "wm-target": "https://janmonschke.com/adding-webmentions-to-your-static-blog/",
    "wm-protocol": "webmention",
    "repost-of": "https://janmonschke.com/adding-webmentions-to-your-static-blog/",
    "wm-property": "repost-of",
    "wm-private": false
  },
  {
    "type": "entry",
    "author": {
      "type": "card",
      "name": "Márton Salomváry",
      "photo": "https://avatars.webmention.io/media.social.lol/87042648575d2aa2de2c2d66533c63431eec95a82ee47094bc6eb526ec39a356.jpg",
      "url": "https://mastodon.berlin/@mrc"
    },
    "url": "https://social.lol/@janmon/109777627702072379#favorited-by-109722280063246686",
    "published": null,
    "wm-received": "2023-01-30T11:15:42Z",
    "wm-id": 1610347,
    "wm-source": "https://brid.gy/like/mastodon/@janmon@social.lol/109777627702072379/109722280063246686",
    "wm-target": "https://janmonschke.com/adding-webmentions-to-your-static-blog/",
    "wm-protocol": "webmention",
    "like-of": "https://janmonschke.com/adding-webmentions-to-your-static-blog/",
    "wm-property": "like-of",
    "wm-private": false
  },
  {
    "type": "entry",
    "author": {
      "type": "card",
      "name": "Stefan Judis",
      "photo": "https://avatars.webmention.io/pbs.twimg.com/2ba9a47d3ee6152babbedde03f3aa501709fa131fd662c70cfd9c4ee0aca30b6.jpg",
      "url": "https://twitter.com/stefanjudis"
    },
    "url": "https://twitter.com/thedeftone/status/1620004702632169473#favorited-by-380616577",
    "published": null,
    "wm-received": "2023-01-30T11:46:13Z",
    "wm-id": 1610383,
    "wm-source": "https://brid.gy/like/twitter/thedeftone/1620004702632169473/380616577",
    "wm-target": "https://janmonschke.com/adding-webmentions-to-your-static-blog/",
    "wm-protocol": "webmention",
    "like-of": "https://janmonschke.com/adding-webmentions-to-your-static-blog/",
    "wm-property": "like-of",
    "wm-private": false
  },
  {
    "type": "entry",
    "author": {
      "type": "card",
      "name": "Esteban Torres",
      "photo": "https://avatars.webmention.io/pbs.twimg.com/74583f80a05615213b01cf11d2d926ae624d42cf393f5072b508e09fd2fd9216.jpg",
      "url": "https://twitter.com/esttorhe"
    },
    "url": "https://twitter.com/esttorhe/status/1620014912834572288",
    "published": "2023-01-30T11:03:48+00:00",
    "wm-received": "2023-01-30T11:46:28Z",
    "wm-id": 1610384,
    "wm-source": "https://brid.gy/comment/twitter/thedeftone/1620004702632169473/1620014912834572288",
    "wm-target": "https://janmonschke.com/adding-webmentions-to-your-static-blog/",
    "wm-protocol": "webmention",
    "content": {
      "html": "Ohhh. Nice work Jan. \n\nWill definitely try to tinker with this and try to add it to my own website\n<a class=\"u-mention\" href=\"https://janmonschke.com/\"></a>\n<a class=\"u-mention\" href=\"https://twitter.com/thedeftone\"></a>",
      "text": "Ohhh. Nice work Jan. \n\nWill definitely try to tinker with this and try to add it to my own website"
    },
    "in-reply-to": "https://janmonschke.com/adding-webmentions-to-your-static-blog/",
    "wm-property": "in-reply-to",
    "wm-private": false
  },
  {
    "type": "entry",
    "author": {
      "type": "card",
      "name": "Esteban Torres",
      "photo": "https://avatars.webmention.io/pbs.twimg.com/74583f80a05615213b01cf11d2d926ae624d42cf393f5072b508e09fd2fd9216.jpg",
      "url": "https://twitter.com/esttorhe"
    },
    "url": "https://twitter.com/thedeftone/status/1620004702632169473#favorited-by-31261028",
    "published": null,
    "wm-received": "2023-01-30T11:46:28Z",
    "wm-id": 1610385,
    "wm-source": "https://brid.gy/like/twitter/thedeftone/1620004702632169473/31261028",
    "wm-target": "https://janmonschke.com/adding-webmentions-to-your-static-blog/",
    "wm-protocol": "webmention",
    "like-of": "https://janmonschke.com/adding-webmentions-to-your-static-blog/",
    "wm-property": "like-of",
    "wm-private": false
  },
  {
    "type": "entry",
    "author": {
      "type": "card",
      "name": "Simon Hohl",
      "photo": "https://avatars.webmention.io/media.social.lol/de3008fdb11a86c7ce704921c451ef3a6ca0f2ba652f29a9761c0462f20dde63.png",
      "url": "https://home.social/@dersmon"
    },
    "url": "https://social.lol/@janmon/109777627702072379#favorited-by-109353923473060147",
    "published": null,
    "wm-received": "2023-01-30T11:46:30Z",
    "wm-id": 1610386,
    "wm-source": "https://brid.gy/like/mastodon/@janmon@social.lol/109777627702072379/109353923473060147",
    "wm-target": "https://janmonschke.com/adding-webmentions-to-your-static-blog/",
    "wm-protocol": "webmention",
    "like-of": "https://janmonschke.com/adding-webmentions-to-your-static-blog/",
    "wm-property": "like-of",
    "wm-private": false
  },
  {
    "type": "entry",
    "author": {
      "type": "card",
      "name": "Andy Bell",
      "photo": "https://avatars.webmention.io/media.social.lol/cea017ea6e66e1ee7d2f97f7278d83b1aa6a13ccb195c71c06a3e7b04d9bdfa0.jpg",
      "url": "https://bell.bz/@andy"
    },
    "url": "https://social.lol/@janmon/109777627702072379#favorited-by-109365862216270557",
    "published": null,
    "wm-received": "2023-01-30T12:24:38Z",
    "wm-id": 1610419,
    "wm-source": "https://brid.gy/like/mastodon/@janmon@social.lol/109777627702072379/109365862216270557",
    "wm-target": "https://janmonschke.com/adding-webmentions-to-your-static-blog/",
    "wm-protocol": "webmention",
    "like-of": "https://janmonschke.com/adding-webmentions-to-your-static-blog/",
    "wm-property": "like-of",
    "wm-private": false
  },
  {
    "type": "entry",
    "author": {
      "type": "card",
      "name": "Henry",
      "photo": "https://avatars.webmention.io/media.social.lol/2d3c63a237690d230a534d120e4ee48813a409195bf4cb061af204bc8d1fe63e.jpg",
      "url": "https://social.lol/@hl"
    },
    "url": "https://social.lol/@janmon/109777627702072379#favorited-by-109604777636002090",
    "published": null,
    "wm-received": "2023-01-30T12:24:38Z",
    "wm-id": 1610420,
    "wm-source": "https://brid.gy/like/mastodon/@janmon@social.lol/109777627702072379/109604777636002090",
    "wm-target": "https://janmonschke.com/adding-webmentions-to-your-static-blog/",
    "wm-protocol": "webmention",
    "like-of": "https://janmonschke.com/adding-webmentions-to-your-static-blog/",
    "wm-property": "like-of",
    "wm-private": false
  },
  {
    "type": "entry",
    "author": {
      "type": "card",
      "name": "Rob Anderson",
      "photo": "https://avatars.webmention.io/media.social.lol/58f0928fe136e8aa8a4bdf0861137158f95a762dfd999fe963bc947539523076.jpg",
      "url": "https://hyem.tech/@rob"
    },
    "url": "https://social.lol/@janmon/109777627702072379#favorited-by-109435415106206989",
    "published": null,
    "wm-received": "2023-01-30T14:05:49Z",
    "wm-id": 1610491,
    "wm-source": "https://brid.gy/like/mastodon/@janmon@social.lol/109777627702072379/109435415106206989",
    "wm-target": "https://janmonschke.com/adding-webmentions-to-your-static-blog/",
    "wm-protocol": "webmention",
    "like-of": "https://janmonschke.com/adding-webmentions-to-your-static-blog/",
    "wm-property": "like-of",
    "wm-private": false
  },
  {
    "type": "entry",
    "author": {
      "type": "card",
      "name": "Michael Henriksen",
      "photo": "https://avatars.webmention.io/media.social.lol/f3c773ff17ba197727fb1dafae3dd63977d55848ad3ad87df5d3d1710b085e3d.png",
      "url": "https://chaos.social/@michenriksen"
    },
    "url": "https://social.lol/@janmon/109777627702072379#favorited-by-109331349286151910",
    "published": null,
    "wm-received": "2023-01-30T14:33:47Z",
    "wm-id": 1610522,
    "wm-source": "https://brid.gy/like/mastodon/@janmon@social.lol/109777627702072379/109331349286151910",
    "wm-target": "https://janmonschke.com/adding-webmentions-to-your-static-blog/",
    "wm-protocol": "webmention",
    "like-of": "https://janmonschke.com/adding-webmentions-to-your-static-blog/",
    "wm-property": "like-of",
    "wm-private": false
  },
  {
    "type": "entry",
    "author": {
      "type": "card",
      "name": "Jan Monschke (@janmon@social.lol)",
      "photo": "https://avatars.webmention.io/pbs.twimg.com/ca3ad8e6d343c6d7b2069c6c885f79e0e2e53eaab61482b5a471a344cf7780a8.jpg",
      "url": "https://twitter.com/thedeftone"
    },
    "url": "https://twitter.com/thedeftone/status/1620052183713718272",
    "published": "2023-01-30T13:31:54+00:00",
    "wm-received": "2023-01-30T16:17:52Z",
    "wm-id": 1610613,
    "wm-source": "https://brid.gy/comment/twitter/thedeftone/1620004702632169473/1620052183713718272",
    "wm-target": "https://janmonschke.com/adding-webmentions-to-your-static-blog/",
    "wm-protocol": "webmention",
    "content": {
      "html": "Yess, let me know how it goes!\n<a class=\"u-mention\" href=\"https://twitter.com/esttorhe\"></a>",
      "text": "Yess, let me know how it goes!"
    },
    "in-reply-to": "https://janmonschke.com/adding-webmentions-to-your-static-blog/",
    "wm-property": "in-reply-to",
    "wm-private": false
  },
  {
    "type": "entry",
    "author": {
      "type": "card",
      "name": "🇺🇦 @gryzzly@mastodon.social",
      "photo": "https://avatars.webmention.io/pbs.twimg.com/1cea001225e316fea0cd64321f597ce8c13088979442312bfe3f93b43137ea72.jpg",
      "url": "https://twitter.com/gryzzly"
    },
    "url": "https://twitter.com/thedeftone/status/1620004702632169473#favorited-by-10253772",
    "published": null,
    "wm-received": "2023-01-30T16:17:55Z",
    "wm-id": 1610614,
    "wm-source": "https://brid.gy/like/twitter/thedeftone/1620004702632169473/10253772",
    "wm-target": "https://janmonschke.com/adding-webmentions-to-your-static-blog/",
    "wm-protocol": "webmention",
    "like-of": "https://janmonschke.com/adding-webmentions-to-your-static-blog/",
    "wm-property": "like-of",
    "wm-private": false
  },
  {
    "type": "entry",
    "author": {
      "type": "card",
      "name": "michele with one L",
      "photo": "https://avatars.webmention.io/pbs.twimg.com/981eadca03f4d53b672c4ffd90e792c353e8071c4c82c63d09b7e965be1f7fc1.png",
      "url": "https://twitter.com/sheley"
    },
    "url": "https://twitter.com/thedeftone/status/1620004702632169473#favorited-by-17388692",
    "published": null,
    "wm-received": "2023-01-30T16:17:58Z",
    "wm-id": 1610615,
    "wm-source": "https://brid.gy/like/twitter/thedeftone/1620004702632169473/17388692",
    "wm-target": "https://janmonschke.com/adding-webmentions-to-your-static-blog/",
    "wm-protocol": "webmention",
    "like-of": "https://janmonschke.com/adding-webmentions-to-your-static-blog/",
    "wm-property": "like-of",
    "wm-private": false
  },
  {
    "type": "entry",
    "author": {
      "type": "card",
      "name": "Robb Knight :prami:",
      "photo": "https://avatars.webmention.io/media.social.lol/d2b5943b2e687ef31399f8241bd07d88b1140716a89c5e026038eaf8ec5341b7.jpg",
      "url": "https://social.lol/@robb"
    },
    "url": "https://social.lol/@robb/109779567016132895",
    "published": "2023-01-30T18:27:36",
    "wm-received": "2023-01-30T18:37:24Z",
    "wm-id": 1610874,
    "wm-source": "https://brid.gy/comment/mastodon/@janmon@social.lol/109779564599075072/109779567016132895",
    "wm-target": "https://janmonschke.com/adding-webmentions-to-your-static-blog/",
    "wm-protocol": "webmention",
    "content": {
      "html": "<p><span class=\"h-card\"><a href=\"https://social.lol/@janmon\" class=\"u-url\">@<span>janmon</span></a></span> Your post is what reminded me, I just saw it in my RSS!</p>",
      "text": "@janmon Your post is what reminded me, I just saw it in my RSS!"
    },
    "in-reply-to": "https://janmonschke.com/adding-webmentions-to-your-static-blog/",
    "wm-property": "in-reply-to",
    "wm-private": false
  },
  {
    "type": "entry",
    "author": {
      "type": "card",
      "name": "Jan",
      "photo": "https://avatars.webmention.io/media.social.lol/94385a86d0a91df34c7b3f23d9433008ded38e5424efc65946b2e9fa4d288a77.jpg",
      "url": "https://social.lol/@janmon"
    },
    "url": "https://social.lol/@janmon/109779571523369368",
    "published": "2023-01-30T18:28:45",
    "wm-received": "2023-01-30T18:37:24Z",
    "wm-id": 1610875,
    "wm-source": "https://brid.gy/comment/mastodon/@janmon@social.lol/109779564599075072/109779571523369368",
    "wm-target": "https://janmonschke.com/adding-webmentions-to-your-static-blog/",
    "wm-protocol": "webmention",
    "content": {
      "html": "<p><span class=\"h-card\"><a href=\"https://social.lol/@robb\" class=\"u-url\">@<span>robb</span></a></span> 🤩✌️</p>",
      "text": "@robb 🤩✌️"
    },
    "in-reply-to": "https://janmonschke.com/adding-webmentions-to-your-static-blog/",
    "wm-property": "in-reply-to",
    "wm-private": false
  },
  {
    "type": "entry",
    "author": {
      "type": "card",
      "name": "Jan",
      "photo": "https://avatars.webmention.io/media.social.lol/94385a86d0a91df34c7b3f23d9433008ded38e5424efc65946b2e9fa4d288a77.jpg",
      "url": "https://social.lol/@janmon"
    },
    "url": "https://social.lol/@janmon/109778389481723036",
    "published": "2023-01-30T13:28:08",
    "wm-received": "2023-01-30T18:43:30Z",
    "wm-id": 1610882,
    "wm-source": "https://brid.gy/comment/mastodon/@janmon@social.lol/109777627702072379/109778389481723036",
    "wm-target": "https://janmonschke.com/adding-webmentions-to-your-static-blog/",
    "wm-protocol": "webmention",
    "content": {
      "html": "<p><span class=\"h-card\"><a href=\"https://mastodon.world/@hamatti\" class=\"u-url\">@<span>hamatti</span></a></span> Glad you liked it 🎉</p><p>Good luck with your integration. Let me know in case you hit any road blocks!</p>",
      "text": "@hamatti Glad you liked it 🎉Good luck with your integration. Let me know in case you hit any road blocks!"
    },
    "in-reply-to": "https://janmonschke.com/adding-webmentions-to-your-static-blog/",
    "wm-property": "in-reply-to",
    "wm-private": false
  },
  {
    "type": "entry",
    "author": {
      "type": "card",
      "name": "Guillaume Marty",
      "photo": "https://avatars.webmention.io/media.social.lol/f880a3cb33e4e3e50b4041f60034eaf030c115c5bd4231ceff4a5ddb40eb688e.jpg",
      "url": "https://indieweb.social/@gmarty"
    },
    "url": "https://social.lol/@janmon/109777627702072379#favorited-by-109437888941458521",
    "published": null,
    "wm-received": "2023-01-30T18:43:33Z",
    "wm-id": 1610883,
    "wm-source": "https://brid.gy/like/mastodon/@janmon@social.lol/109777627702072379/109437888941458521",
    "wm-target": "https://janmonschke.com/adding-webmentions-to-your-static-blog/",
    "wm-protocol": "webmention",
    "like-of": "https://janmonschke.com/adding-webmentions-to-your-static-blog/",
    "wm-property": "like-of",
    "wm-private": false
  },
  {
    "type": "entry",
    "author": {
      "type": "card",
      "name": "Romain Boulay",
      "photo": "https://avatars.webmention.io/pbs.twimg.com/d12a3ebbc44128b69a7958ffa483d151740a49c7ecbe0f2b1ce9380be1485712.jpg",
      "url": "https://twitter.com/r_boulay"
    },
    "url": "https://twitter.com/thedeftone/status/1620004702632169473#favorited-by-16965828",
    "published": null,
    "wm-received": "2023-01-31T11:06:36Z",
    "wm-id": 1611974,
    "wm-source": "https://brid.gy/like/twitter/thedeftone/1620004702632169473/16965828",
    "wm-target": "https://janmonschke.com/adding-webmentions-to-your-static-blog/",
    "wm-protocol": "webmention",
    "like-of": "https://janmonschke.com/adding-webmentions-to-your-static-blog/",
    "wm-property": "like-of",
    "wm-private": false
  },
  {
    "type": "entry",
    "author": {
      "type": "card",
      "name": "",
      "photo": "",
      "url": ""
    },
    "url": "https://rknight.me/adding-webmentions-to-your-site/",
    "published": null,
    "wm-received": "2023-01-31T13:13:06Z",
    "wm-id": 1612074,
    "wm-source": "https://rknight.me/adding-webmentions-to-your-site/",
    "wm-target": "https://janmonschke.com/adding-webmentions-to-your-static-blog/",
    "wm-protocol": "webmention",
    "mention-of": "https://janmonschke.com/adding-webmentions-to-your-static-blog/",
    "wm-property": "mention-of",
    "wm-private": false
  },
  {
    "type": "entry",
    "author": {
      "type": "card",
      "name": "trovster",
      "photo": "https://avatars.webmention.io/pbs.twimg.com/9164cacb13a6a5ae179f52d1926a290f33a576fd782b65f017a6e17fd02a4891.jpg",
      "url": "https://twitter.com/trovster"
    },
    "url": "https://twitter.com/trovster/status/1630994987742625801",
    "published": "2023-03-01T18:14:42+00:00",
    "wm-received": "2023-03-01T20:27:36Z",
    "wm-id": 1632435,
    "wm-source": "https://brid.gy/post/twitter/thedeftone/1630994987742625801",
    "wm-target": "https://janmonschke.com/adding-webmentions-to-your-static-blog/",
    "wm-protocol": "webmention",
    "content": {
      "html": "🔗 Adding webmentions to your static blog\n\n&gt; Blogs are using webmentions to gather mentions/likes/reposts from all over the internet. Webmentions are a (recommended) standard that allows sites to notify other sites that they’re linking to them.\n\n<a href=\"https://janmonschke.com/adding-webmentions-to-your-static-blog\">janmonschke.com/adding-webment…</a>\n<a class=\"u-mention\" href=\"https://janmonschke.com/adding-webmentions-to-your-static-blog/\"></a>",
      "text": "🔗 Adding webmentions to your static blog\n\n> Blogs are using webmentions to gather mentions/likes/reposts from all over the internet. Webmentions are a (recommended) standard that allows sites to notify other sites that they’re linking to them.\n\njanmonschke.com/adding-webment…"
    },
    "mention-of": "https://janmonschke.com/adding-webmentions-to-your-static-blog/",
    "wm-property": "mention-of",
    "wm-private": false
  },
  {
    "type": "entry",
    "author": {
      "type": "card",
      "name": "",
      "photo": "",
      "url": ""
    },
    "url": "https://ahmad.build/2023/08/08/setting-up-webmention-with-cloudflare-and-astrojs/",
    "published": null,
    "wm-received": "2023-11-23T01:01:36Z",
    "wm-id": 1743426,
    "wm-source": "https://ahmad.build/2023/08/08/setting-up-webmention-with-cloudflare-and-astrojs/",
    "wm-target": "https://janmonschke.com/adding-webmentions-to-your-static-blog/",
    "wm-protocol": "webmention",
    "content": {
      "html": "<p>This is part of effort to own my content. Rather than posting the content elsewhere, post it on my platform instead (this blog).</p>\n<h3>Basic Idea</h3>\n<ol><li><a href=\"https://ahmad.build/2023/08/08/setting-up-webmention-with-cloudflare-and-astrojs/#1-get-data-from-webmentionsio\">get our data from webmentions.io, and store within <code>src/content/webmentions</code> folder</a>,</li>\n<li><a href=\"https://ahmad.build/2023/08/08/setting-up-webmention-with-cloudflare-and-astrojs/#2-create-new-astro-collection\">create new Astro collection called webmentions</a>,</li>\n<li><a href=\"https://ahmad.build/2023/08/08/setting-up-webmention-with-cloudflare-and-astrojs/#3-consume-the-webmention-data\">consume the data - get the collection from step 2 and call wherever</a>,</li>\n<li><a href=\"https://ahmad.build/2023/08/08/setting-up-webmention-with-cloudflare-and-astrojs/#4-push-to-github\">push to GitHub</a>,</li>\n<li><a href=\"https://ahmad.build/2023/08/08/setting-up-webmention-with-cloudflare-and-astrojs/#5-linked-cloudflare-with-github\">link Cloudflare with GitHub</a></li>\n</ol><h4>1. Get data from webmentions.io</h4>\n<p>I’m using script from <a href=\"https://janmonschke.com/adding-webmentions-to-your-static-blog/\">Jan Monschke</a> with a bit of modification. This script will be executed by GitHub action and auto commit to specified folder (in this case, <code>src/content/webmentions</code> folder).</p>\n<pre style=\"background-color:#24292e;\"><code><span><span style=\"color:#F97583;\">import</span><span style=\"color:#E1E4E8;\"> </span><span style=\"color:#79B8FF;\">*</span><span style=\"color:#E1E4E8;\"> </span><span style=\"color:#F97583;\">as</span><span style=\"color:#E1E4E8;\"> https </span><span style=\"color:#F97583;\">from</span><span style=\"color:#E1E4E8;\"> </span><span style=\"color:#9ECBFF;\">\"https\"</span><span style=\"color:#E1E4E8;\">;</span></span>\n<span><span style=\"color:#F97583;\">import</span><span style=\"color:#E1E4E8;\"> </span><span style=\"color:#79B8FF;\">*</span><span style=\"color:#E1E4E8;\"> </span><span style=\"color:#F97583;\">as</span><span style=\"color:#E1E4E8;\"> fs </span><span style=\"color:#F97583;\">from</span><span style=\"color:#E1E4E8;\"> </span><span style=\"color:#9ECBFF;\">\"fs\"</span><span style=\"color:#E1E4E8;\">;</span></span>\n<span><span style=\"color:#F97583;\">import</span><span style=\"color:#E1E4E8;\"> { getSlugFromPathName, getFileName } </span><span style=\"color:#F97583;\">from</span><span style=\"color:#E1E4E8;\"> </span><span style=\"color:#9ECBFF;\">\"../utils/common.js\"</span><span style=\"color:#E1E4E8;\">;</span></span>\n<span></span>\n<span><span style=\"color:#F97583;\">const</span><span style=\"color:#E1E4E8;\"> { </span><span style=\"color:#79B8FF;\">WEBMENTIONS_IO_TOKEN</span><span style=\"color:#E1E4E8;\"> } </span><span style=\"color:#F97583;\">=</span><span style=\"color:#E1E4E8;\"> process.env;</span></span>\n<span><span style=\"color:#F97583;\">const</span><span style=\"color:#E1E4E8;\"> { </span><span style=\"color:#79B8FF;\">HOSTNAME</span><span style=\"color:#E1E4E8;\"> } </span><span style=\"color:#F97583;\">=</span><span style=\"color:#E1E4E8;\"> </span><span style=\"color:#9ECBFF;\">\"ahmad.build\"</span><span style=\"color:#E1E4E8;\">;</span></span>\n<span></span>\n<span><span style=\"color:#F97583;\">async</span><span style=\"color:#E1E4E8;\"> </span><span style=\"color:#F97583;\">function</span><span style=\"color:#E1E4E8;\"> </span><span style=\"color:#B392F0;\">fetchMentions</span><span style=\"color:#E1E4E8;\">() {</span></span>\n<span><span style=\"color:#E1E4E8;\">\t</span><span style=\"color:#F97583;\">const</span><span style=\"color:#E1E4E8;\"> </span><span style=\"color:#79B8FF;\">url</span><span style=\"color:#E1E4E8;\"> </span><span style=\"color:#F97583;\">=</span><span style=\"color:#E1E4E8;\"> </span><span style=\"color:#9ECBFF;\">`https://webmention.io/api/mentions.jf2?domain=${</span><span style=\"color:#79B8FF;\">HOSTNAME</span><span style=\"color:#9ECBFF;\">}&amp;token=${</span><span style=\"color:#79B8FF;\">WEBMENTIONS_IO_TOKEN</span><span style=\"color:#9ECBFF;\">}&amp;per-page=999`</span><span style=\"color:#E1E4E8;\">;</span></span>\n<span></span>\n<span><span style=\"color:#E1E4E8;\">\t</span><span style=\"color:#F97583;\">return</span><span style=\"color:#E1E4E8;\"> </span><span style=\"color:#F97583;\">new</span><span style=\"color:#E1E4E8;\"> </span><span style=\"color:#79B8FF;\">Promise</span><span style=\"color:#E1E4E8;\">((</span><span style=\"color:#FFAB70;\">resolve</span><span style=\"color:#E1E4E8;\">, </span><span style=\"color:#FFAB70;\">reject</span><span style=\"color:#E1E4E8;\">) </span><span style=\"color:#F97583;\">=&gt;</span><span style=\"color:#E1E4E8;\"> {</span></span>\n<span><span style=\"color:#E1E4E8;\">\t\t</span><span style=\"color:#6A737D;\">// create Promise here</span></span>\n<span><span style=\"color:#E1E4E8;\">\t}).</span><span style=\"color:#B392F0;\">then</span><span style=\"color:#E1E4E8;\">((</span><span style=\"color:#FFAB70;\">response</span><span style=\"color:#E1E4E8;\">) </span><span style=\"color:#F97583;\">=&gt;</span><span style=\"color:#E1E4E8;\"> {</span></span>\n<span><span style=\"color:#E1E4E8;\">\t\t</span><span style=\"color:#F97583;\">return</span><span style=\"color:#E1E4E8;\"> response.children;</span></span>\n<span><span style=\"color:#E1E4E8;\">\t});</span></span>\n<span><span style=\"color:#E1E4E8;\">}</span></span>\n<span></span>\n<span><span style=\"color:#B392F0;\">fetchMentions</span><span style=\"color:#E1E4E8;\">().</span><span style=\"color:#B392F0;\">then</span><span style=\"color:#E1E4E8;\">((</span><span style=\"color:#FFAB70;\">webmentions</span><span style=\"color:#E1E4E8;\">) </span><span style=\"color:#F97583;\">=&gt;</span><span style=\"color:#E1E4E8;\"> {</span></span>\n<span><span style=\"color:#E1E4E8;\">\tconsole.</span><span style=\"color:#B392F0;\">log</span><span style=\"color:#E1E4E8;\">(</span><span style=\"color:#9ECBFF;\">`Fetched ${</span><span style=\"color:#E1E4E8;\">webmentions</span><span style=\"color:#9ECBFF;\">.</span><span style=\"color:#79B8FF;\">length</span><span style=\"color:#9ECBFF;\">} webmentions`</span><span style=\"color:#E1E4E8;\">);</span></span>\n<span><span style=\"color:#E1E4E8;\">\twebmentions.</span><span style=\"color:#B392F0;\">forEach</span><span style=\"color:#E1E4E8;\">((</span><span style=\"color:#FFAB70;\">webmention</span><span style=\"color:#E1E4E8;\">) </span><span style=\"color:#F97583;\">=&gt;</span><span style=\"color:#E1E4E8;\"> {</span></span>\n<span><span style=\"color:#E1E4E8;\">\t\t</span><span style=\"color:#6A737D;\">// check if mention exist on disk. If exist, fetch new and overwrite. Else, create new mention.</span></span>\n<span><span style=\"color:#E1E4E8;\">\t\t</span><span style=\"color:#6A737D;\">// write the mention to disk</span></span>\n<span><span style=\"color:#E1E4E8;\">\t});</span></span>\n<span><span style=\"color:#E1E4E8;\">});</span></span></code></pre>\n<p><code>WEBMENTIONS_IO_TOKEN</code> value need to be set on GitHub environment.</p>\n<h4>2. Create new Astro collection</h4>\n<p>To create new collection, we need to edit <code>src/content/config.ts</code>. Remember, Astro allow user to have multiple collections, e.g. notes, webmentions, activity etc. Case below, I’m creating new collection called <code>webmentions</code>.</p>\n<pre style=\"background-color:#24292e;\"><code><span><span style=\"color:#F97583;\">const</span><span style=\"color:#E1E4E8;\"> </span><span style=\"color:#79B8FF;\">webmentionsSchema</span><span style=\"color:#E1E4E8;\"> </span><span style=\"color:#F97583;\">=</span><span style=\"color:#E1E4E8;\"> z.</span><span style=\"color:#B392F0;\">object</span><span style=\"color:#E1E4E8;\">({</span></span>\n<span><span style=\"color:#E1E4E8;\">\turl: z.</span><span style=\"color:#B392F0;\">string</span><span style=\"color:#E1E4E8;\">(),</span></span>\n<span><span style=\"color:#E1E4E8;\">\tpublished: z.coerce.</span><span style=\"color:#B392F0;\">date</span><span style=\"color:#E1E4E8;\">(),</span></span>\n<span><span style=\"color:#E1E4E8;\">\t</span><span style=\"color:#9ECBFF;\">\"wm-property\"</span><span style=\"color:#E1E4E8;\">: z.</span><span style=\"color:#B392F0;\">string</span><span style=\"color:#E1E4E8;\">(),</span></span>\n<span><span style=\"color:#E1E4E8;\">\t</span><span style=\"color:#9ECBFF;\">\"wm-received\"</span><span style=\"color:#E1E4E8;\">: z.coerce.</span><span style=\"color:#B392F0;\">date</span><span style=\"color:#E1E4E8;\">(),</span></span>\n<span><span style=\"color:#E1E4E8;\">\tcontent: z</span></span>\n<span><span style=\"color:#E1E4E8;\">\t\t.</span><span style=\"color:#B392F0;\">object</span><span style=\"color:#E1E4E8;\">({</span></span>\n<span><span style=\"color:#E1E4E8;\">\t\t\ttext: z.</span><span style=\"color:#B392F0;\">string</span><span style=\"color:#E1E4E8;\">().</span><span style=\"color:#B392F0;\">optional</span><span style=\"color:#E1E4E8;\">(),</span></span>\n<span><span style=\"color:#E1E4E8;\">\t\t\thtml: z.</span><span style=\"color:#B392F0;\">string</span><span style=\"color:#E1E4E8;\">().</span><span style=\"color:#B392F0;\">optional</span><span style=\"color:#E1E4E8;\">(),</span></span>\n<span><span style=\"color:#E1E4E8;\">\t\t})</span></span>\n<span><span style=\"color:#E1E4E8;\">\t\t.</span><span style=\"color:#B392F0;\">optional</span><span style=\"color:#E1E4E8;\">(),</span></span>\n<span><span style=\"color:#E1E4E8;\">\tauthor: z.</span><span style=\"color:#B392F0;\">object</span><span style=\"color:#E1E4E8;\">({</span></span>\n<span><span style=\"color:#E1E4E8;\">\t\ttype: z.</span><span style=\"color:#B392F0;\">string</span><span style=\"color:#E1E4E8;\">(),</span></span>\n<span><span style=\"color:#E1E4E8;\">\t\tname: z.</span><span style=\"color:#B392F0;\">string</span><span style=\"color:#E1E4E8;\">(),</span></span>\n<span><span style=\"color:#E1E4E8;\">\t\tphoto: z.</span><span style=\"color:#B392F0;\">string</span><span style=\"color:#E1E4E8;\">(),</span></span>\n<span><span style=\"color:#E1E4E8;\">\t\turl: z.</span><span style=\"color:#B392F0;\">string</span><span style=\"color:#E1E4E8;\">(),</span></span>\n<span><span style=\"color:#E1E4E8;\">\t}),</span></span>\n<span><span style=\"color:#E1E4E8;\">});</span></span>\n<span></span>\n<span><span style=\"color:#F97583;\">const</span><span style=\"color:#E1E4E8;\"> </span><span style=\"color:#79B8FF;\">webmentions</span><span style=\"color:#E1E4E8;\"> </span><span style=\"color:#F97583;\">=</span><span style=\"color:#E1E4E8;\"> </span><span style=\"color:#B392F0;\">defineCollection</span><span style=\"color:#E1E4E8;\">({</span></span>\n<span><span style=\"color:#E1E4E8;\">\ttype: </span><span style=\"color:#9ECBFF;\">\"data\"</span><span style=\"color:#E1E4E8;\">,</span></span>\n<span><span style=\"color:#E1E4E8;\">\tschema: z.</span><span style=\"color:#B392F0;\">array</span><span style=\"color:#E1E4E8;\">(webmentionsSchema),</span></span>\n<span><span style=\"color:#E1E4E8;\">});</span></span></code></pre>\n<h4>3. Consume the webmention data</h4>\n<p>Now that the collection is ready, we can customize it to our liking. In my case, I’m getting <code>like</code> and <code>reply</code>. For that, create 2 component : <code>WebmentionList.astro</code> and <code>WebmentionLike.astro</code></p>\n<h5>WebmentionList.astro</h5>\n<pre style=\"background-color:#24292e;\"><code><span><span style=\"color:#F97583;\">---</span></span>\n<span></span>\n<span><span style=\"color:#F97583;\">const</span><span style=\"color:#E1E4E8;\"> { </span><span style=\"color:#79B8FF;\">toot</span><span style=\"color:#E1E4E8;\"> } </span><span style=\"color:#F97583;\">=</span><span style=\"color:#E1E4E8;\"> Astro.props;</span></span>\n<span></span>\n<span><span style=\"color:#F97583;\">let</span><span style=\"color:#E1E4E8;\"> likeCount </span><span style=\"color:#F97583;\">=</span><span style=\"color:#E1E4E8;\"> [];</span></span>\n<span><span style=\"color:#E1E4E8;\">toot.</span><span style=\"color:#B392F0;\">map</span><span style=\"color:#E1E4E8;\">((</span><span style=\"color:#FFAB70;\">toot</span><span style=\"color:#E1E4E8;\">) </span><span style=\"color:#F97583;\">=&gt;</span><span style=\"color:#E1E4E8;\"> {</span></span>\n<span><span style=\"color:#E1E4E8;\">\t</span><span style=\"color:#F97583;\">if</span><span style=\"color:#E1E4E8;\"> (toot[</span><span style=\"color:#9ECBFF;\">\"wm-property\"</span><span style=\"color:#E1E4E8;\">] </span><span style=\"color:#F97583;\">===</span><span style=\"color:#E1E4E8;\"> </span><span style=\"color:#9ECBFF;\">\"like-of\"</span><span style=\"color:#E1E4E8;\">) {</span></span>\n<span><span style=\"color:#E1E4E8;\">\t\tlikeCount.</span><span style=\"color:#B392F0;\">push</span><span style=\"color:#E1E4E8;\">(toot);</span></span>\n<span><span style=\"color:#E1E4E8;\">\t}</span></span>\n<span><span style=\"color:#E1E4E8;\">});</span></span>\n<span><span style=\"color:#F97583;\">const</span><span style=\"color:#E1E4E8;\"> </span><span style=\"color:#79B8FF;\">tootLikeCount</span><span style=\"color:#E1E4E8;\"> </span><span style=\"color:#F97583;\">=</span><span style=\"color:#E1E4E8;\"> Object.</span><span style=\"color:#B392F0;\">values</span><span style=\"color:#E1E4E8;\">(likeCount).</span><span style=\"color:#79B8FF;\">length</span><span style=\"color:#E1E4E8;\">;</span></span>\n<span></span>\n<span><span style=\"color:#F97583;\">const</span><span style=\"color:#E1E4E8;\"> </span><span style=\"color:#79B8FF;\">hasLike</span><span style=\"color:#E1E4E8;\"> </span><span style=\"color:#F97583;\">=</span><span style=\"color:#E1E4E8;\"> toot.</span><span style=\"color:#B392F0;\">some</span><span style=\"color:#E1E4E8;\">(</span><span style=\"color:#F97583;\">function</span><span style=\"color:#E1E4E8;\"> (</span><span style=\"color:#FFAB70;\">o</span><span style=\"color:#E1E4E8;\">) {</span></span>\n<span><span style=\"color:#E1E4E8;\">\t</span><span style=\"color:#F97583;\">return</span><span style=\"color:#E1E4E8;\"> o[</span><span style=\"color:#9ECBFF;\">\"wm-property\"</span><span style=\"color:#E1E4E8;\">] </span><span style=\"color:#F97583;\">===</span><span style=\"color:#E1E4E8;\"> </span><span style=\"color:#9ECBFF;\">\"like-of\"</span><span style=\"color:#E1E4E8;\">;</span></span>\n<span><span style=\"color:#E1E4E8;\">});</span></span>\n<span><span style=\"color:#F97583;\">---</span></span>\n<span><span style=\"color:#E1E4E8;\">{</span></span>\n<span><span style=\"color:#E1E4E8;\">\ttoot.</span><span style=\"color:#79B8FF;\">length</span><span style=\"color:#E1E4E8;\"> </span><span style=\"color:#F97583;\">&gt;</span><span style=\"color:#E1E4E8;\"> </span><span style=\"color:#79B8FF;\">0</span><span style=\"color:#E1E4E8;\"> </span><span style=\"color:#F97583;\">&amp;&amp;</span><span style=\"color:#E1E4E8;\"> (</span></span>\n<span><span style=\"color:#E1E4E8;\">\t\t&lt;</span><span style=\"color:#85E89D;\">div</span><span style=\"color:#E1E4E8;\"> </span><span style=\"color:#B392F0;\">class</span><span style=\"color:#F97583;\">=</span><span style=\"color:#9ECBFF;\">\"webmentions\"</span><span style=\"color:#E1E4E8;\">&gt;</span></span>\n<span><span style=\"color:#E1E4E8;\">\t\t\t&lt;</span><span style=\"color:#85E89D;\">div</span><span style=\"color:#E1E4E8;\"> </span><span style=\"color:#B392F0;\">class</span><span style=\"color:#F97583;\">=</span><span style=\"color:#9ECBFF;\">\"wm-header\"</span><span style=\"color:#E1E4E8;\">&gt;</span></span>\n<span><span style=\"color:#E1E4E8;\">\t\t\t\t&lt;</span><span style=\"color:#85E89D;\">h3</span><span style=\"color:#E1E4E8;\">&gt;</span></span>\n<span><span style=\"color:#E1E4E8;\">\t\t\t\t\tWebmention</span></span>\n<span><span style=\"color:#E1E4E8;\">\t\t\t\t\t&lt;</span><span style=\"color:#85E89D;\">a</span><span style=\"color:#E1E4E8;\"> </span><span style=\"color:#B392F0;\">href</span><span style=\"color:#F97583;\">=</span><span style=\"color:#9ECBFF;\">\"/toots.xml\"</span><span style=\"color:#E1E4E8;\"> </span><span style=\"color:#B392F0;\">rel</span><span style=\"color:#F97583;\">=</span><span style=\"color:#9ECBFF;\">\"me\"</span><span style=\"color:#E1E4E8;\"> </span><span style=\"color:#B392F0;\">class</span><span style=\"color:#F97583;\">=</span><span style=\"color:#9ECBFF;\">\"rss\"</span><span style=\"color:#E1E4E8;\"> </span><span style=\"color:#B392F0;\">title</span><span style=\"color:#F97583;\">=</span><span style=\"color:#9ECBFF;\">\"RSS for toots\"</span><span style=\"color:#E1E4E8;\"> /&gt;</span></span>\n<span><span style=\"color:#E1E4E8;\">\t\t\t\t&lt;/</span><span style=\"color:#85E89D;\">h3</span><span style=\"color:#E1E4E8;\">&gt;</span></span>\n<span></span>\n<span><span style=\"color:#E1E4E8;\">\t\t\t\t{hasLike </span><span style=\"color:#F97583;\">&amp;&amp;</span><span style=\"color:#E1E4E8;\"> (</span></span>\n<span><span style=\"color:#E1E4E8;\">\t\t\t\t\t&lt;</span><span style=\"color:#85E89D;\">div</span><span style=\"color:#E1E4E8;\"> </span><span style=\"color:#B392F0;\">class</span><span style=\"color:#F97583;\">=</span><span style=\"color:#9ECBFF;\">\"wm-like\"</span><span style=\"color:#E1E4E8;\">&gt;</span></span>\n<span><span style=\"color:#E1E4E8;\">\t\t\t\t\t\t&lt;</span><span style=\"color:#85E89D;\">ul</span><span style=\"color:#E1E4E8;\">&gt;</span></span>\n<span><span style=\"color:#E1E4E8;\">\t\t\t\t\t\t\t{toot.</span><span style=\"color:#B392F0;\">map</span><span style=\"color:#E1E4E8;\">(</span></span>\n<span><span style=\"color:#E1E4E8;\">\t\t\t\t\t\t\t\t(</span><span style=\"color:#FFAB70;\">toot</span><span style=\"color:#E1E4E8;\">) </span><span style=\"color:#F97583;\">=&gt;</span></span>\n<span><span style=\"color:#E1E4E8;\">\t\t\t\t\t\t\t\t\ttoot[</span><span style=\"color:#9ECBFF;\">\"wm-property\"</span><span style=\"color:#E1E4E8;\">] </span><span style=\"color:#F97583;\">==</span><span style=\"color:#E1E4E8;\"> </span><span style=\"color:#9ECBFF;\">\"like-of\"</span><span style=\"color:#E1E4E8;\"> </span><span style=\"color:#F97583;\">&amp;&amp;</span><span style=\"color:#E1E4E8;\"> (</span></span>\n<span><span style=\"color:#E1E4E8;\">\t\t\t\t\t\t\t\t\t\t&lt;</span><span style=\"color:#79B8FF;\">WebmentionLike</span><span style=\"color:#E1E4E8;\"> </span><span style=\"color:#B392F0;\">toot</span><span style=\"color:#F97583;\">=</span><span style=\"color:#E1E4E8;\">{toot} /&gt;</span></span>\n<span><span style=\"color:#E1E4E8;\">\t\t\t\t\t\t\t\t\t)</span></span>\n<span><span style=\"color:#E1E4E8;\">\t\t\t\t\t\t\t)}</span></span>\n<span><span style=\"color:#E1E4E8;\">\t\t\t\t\t\t&lt;/</span><span style=\"color:#85E89D;\">ul</span><span style=\"color:#E1E4E8;\">&gt;</span></span>\n<span><span style=\"color:#E1E4E8;\">\t\t\t\t\t\t&lt;</span><span style=\"color:#85E89D;\">div</span><span style=\"color:#E1E4E8;\"> </span><span style=\"color:#B392F0;\">class</span><span style=\"color:#F97583;\">=</span><span style=\"color:#9ECBFF;\">\"wm-like-count favorite\"</span><span style=\"color:#E1E4E8;\">&gt;</span></span>\n<span><span style=\"color:#E1E4E8;\">\t\t\t\t\t\t\t&lt;</span><span style=\"color:#85E89D;\">small</span><span style=\"color:#E1E4E8;\">&gt;{tootLikeCount </span><span style=\"color:#F97583;\">&gt;</span><span style=\"color:#E1E4E8;\"> </span><span style=\"color:#79B8FF;\">0</span><span style=\"color:#E1E4E8;\"> </span><span style=\"color:#F97583;\">&amp;&amp;</span><span style=\"color:#E1E4E8;\"> tootLikeCount}&lt;/</span><span style=\"color:#85E89D;\">small</span><span style=\"color:#E1E4E8;\">&gt;</span></span>\n<span><span style=\"color:#E1E4E8;\">\t\t\t\t\t\t&lt;/</span><span style=\"color:#85E89D;\">div</span><span style=\"color:#E1E4E8;\">&gt;</span></span>\n<span><span style=\"color:#E1E4E8;\">\t\t\t\t\t&lt;/</span><span style=\"color:#85E89D;\">div</span><span style=\"color:#E1E4E8;\">&gt;</span></span>\n<span><span style=\"color:#E1E4E8;\">\t\t\t\t)}</span></span>\n<span><span style=\"color:#E1E4E8;\">\t\t\t&lt;/</span><span style=\"color:#85E89D;\">div</span><span style=\"color:#E1E4E8;\">&gt;</span></span>\n<span></span>\n<span><span style=\"color:#E1E4E8;\">\t\t\t&lt;</span><span style=\"color:#85E89D;\">ul</span><span style=\"color:#E1E4E8;\"> </span><span style=\"color:#B392F0;\">class</span><span style=\"color:#F97583;\">=</span><span style=\"color:#9ECBFF;\">\"wm-list\"</span><span style=\"color:#E1E4E8;\">&gt;</span></span>\n<span><span style=\"color:#E1E4E8;\">\t\t\t\t{toot.</span><span style=\"color:#B392F0;\">map</span><span style=\"color:#E1E4E8;\">((</span><span style=\"color:#FFAB70;\">toot</span><span style=\"color:#E1E4E8;\">) </span><span style=\"color:#F97583;\">=&gt;</span><span style=\"color:#E1E4E8;\"> (</span></span>\n<span><span style=\"color:#E1E4E8;\">\t\t\t\t\t&lt;</span><span style=\"color:#79B8FF;\">WebmentionCard</span><span style=\"color:#E1E4E8;\"> </span><span style=\"color:#B392F0;\">toot</span><span style=\"color:#F97583;\">=</span><span style=\"color:#E1E4E8;\">{toot} /&gt;</span></span>\n<span><span style=\"color:#E1E4E8;\">\t\t\t\t))}</span></span>\n<span><span style=\"color:#E1E4E8;\">\t\t\t&lt;/</span><span style=\"color:#85E89D;\">ul</span><span style=\"color:#E1E4E8;\">&gt;</span></span>\n<span><span style=\"color:#E1E4E8;\">\t\t&lt;/</span><span style=\"color:#85E89D;\">div</span><span style=\"color:#E1E4E8;\">&gt;</span></span>\n<span><span style=\"color:#E1E4E8;\">\t);</span></span>\n<span><span style=\"color:#E1E4E8;\">}</span></span></code></pre>\n<h5>WebmentionLike.astro</h5>\n<pre style=\"background-color:#24292e;\"><code><span><span style=\"color:#F97583;\">---</span></span>\n<span><span style=\"color:#F97583;\">import</span><span style=\"color:#E1E4E8;\"> </span><span style=\"color:#F97583;\">type</span><span style=\"color:#E1E4E8;\"> { CollectionEntry } </span><span style=\"color:#F97583;\">from</span><span style=\"color:#E1E4E8;\"> </span><span style=\"color:#9ECBFF;\">\"astro:content\"</span><span style=\"color:#E1E4E8;\">;</span></span>\n<span><span style=\"color:#F97583;\">type</span><span style=\"color:#E1E4E8;\"> </span><span style=\"color:#B392F0;\">Props</span><span style=\"color:#E1E4E8;\"> </span><span style=\"color:#F97583;\">=</span><span style=\"color:#E1E4E8;\"> {</span></span>\n<span><span style=\"color:#E1E4E8;\">\t</span><span style=\"color:#FFAB70;\">toot</span><span style=\"color:#F97583;\">:</span><span style=\"color:#E1E4E8;\"> </span><span style=\"color:#B392F0;\">CollectionEntry</span><span style=\"color:#E1E4E8;\">&lt;</span><span style=\"color:#9ECBFF;\">\"toots\"</span><span style=\"color:#E1E4E8;\">&gt;;</span></span>\n<span><span style=\"color:#E1E4E8;\">};</span></span>\n<span><span style=\"color:#F97583;\">const</span><span style=\"color:#E1E4E8;\"> { </span><span style=\"color:#79B8FF;\">toot</span><span style=\"color:#E1E4E8;\"> } </span><span style=\"color:#F97583;\">=</span><span style=\"color:#E1E4E8;\"> Astro.props;</span></span>\n<span><span style=\"color:#F97583;\">---</span></span>\n<span></span>\n<span><span style=\"color:#E1E4E8;\">{</span></span>\n<span><span style=\"color:#E1E4E8;\">\t(</span></span>\n<span><span style=\"color:#E1E4E8;\">\t\t&lt;</span><span style=\"color:#85E89D;\">li</span><span style=\"color:#E1E4E8;\">&gt;</span></span>\n<span><span style=\"color:#E1E4E8;\">\t\t\t&lt;</span><span style=\"color:#85E89D;\">a</span><span style=\"color:#E1E4E8;\"> </span><span style=\"color:#B392F0;\">href</span><span style=\"color:#F97583;\">=</span><span style=\"color:#E1E4E8;\">{toot.author.url}&gt;</span></span>\n<span><span style=\"color:#E1E4E8;\">\t\t\t\t&lt;</span><span style=\"color:#85E89D;\">img</span><span style=\"color:#E1E4E8;\"> </span><span style=\"color:#B392F0;\">class</span><span style=\"color:#F97583;\">=</span><span style=\"color:#9ECBFF;\">\"avatar\"</span><span style=\"color:#E1E4E8;\"> </span><span style=\"color:#B392F0;\">width</span><span style=\"color:#F97583;\">=</span><span style=\"color:#9ECBFF;\">\"32\"</span><span style=\"color:#E1E4E8;\"> </span><span style=\"color:#B392F0;\">height</span><span style=\"color:#F97583;\">=</span><span style=\"color:#9ECBFF;\">\"32\"</span><span style=\"color:#E1E4E8;\"> </span><span style=\"color:#B392F0;\">src</span><span style=\"color:#F97583;\">=</span><span style=\"color:#E1E4E8;\">{toot.author.photo} </span><span style=\"color:#B392F0;\">title</span><span style=\"color:#F97583;\">=</span><span style=\"color:#E1E4E8;\">{toot.author.name} /&gt;</span></span>\n<span><span style=\"color:#E1E4E8;\">\t\t\t&lt;/</span><span style=\"color:#85E89D;\">a</span><span style=\"color:#E1E4E8;\">&gt;</span></span>\n<span><span style=\"color:#E1E4E8;\">\t\t&lt;/</span><span style=\"color:#85E89D;\">li</span><span style=\"color:#E1E4E8;\">&gt;</span></span>\n<span><span style=\"color:#E1E4E8;\">\t)</span></span>\n<span><span style=\"color:#E1E4E8;\">}</span></span>\n<span></span></code></pre>\n<h4>4. Push to GitHub</h4>\n<p>Second last step is to push the code to GitHub. Don’t forget to set <code>WEBMENTIONS_IO_TOKEN</code> on GitHub environment.</p>\n<h4>5. Linked Cloudflare with GitHub</h4>\n<p>Last step is to create new site on Cloudflare and link the site with GitHub repository on previous step.</p>\n<h4>Credit</h4>\n<ol><li><a href=\"https://sebastiandedeyne.com/adding-webmentions-to-my-blog/\">https://sebastiandedeyne.com/adding-webmentions-to-my-blog/</a></li>\n<li><a href=\"https://janmonschke.com/adding-webmentions-to-your-static-blog/\">https://janmonschke.com/adding-webmentions-to-your-static-blog/</a></li>\n</ol>",
      "text": "This is part of effort to own my content. Rather than posting the content elsewhere, post it on my platform instead (this blog).\nBasic Idea\nget our data from webmentions.io, and store within src/content/webmentions folder,\ncreate new Astro collection called webmentions,\nconsume the data - get the collection from step 2 and call wherever,\npush to GitHub,\nlink Cloudflare with GitHub\n1. Get data from webmentions.io\nI’m using script from Jan Monschke with a bit of modification. This script will be executed by GitHub action and auto commit to specified folder (in this case, src/content/webmentions folder).\nimport * as https from \"https\";\nimport * as fs from \"fs\";\nimport { getSlugFromPathName, getFileName } from \"../utils/common.js\";\n\nconst { WEBMENTIONS_IO_TOKEN } = process.env;\nconst { HOSTNAME } = \"ahmad.build\";\n\nasync function fetchMentions() {\n\tconst url = `https://webmention.io/api/mentions.jf2?domain=${HOSTNAME}&token=${WEBMENTIONS_IO_TOKEN}&per-page=999`;\n\n\treturn new Promise((resolve, reject) => {\n\t\t// create Promise here\n\t}).then((response) => {\n\t\treturn response.children;\n\t});\n}\n\nfetchMentions().then((webmentions) => {\n\tconsole.log(`Fetched ${webmentions.length} webmentions`);\n\twebmentions.forEach((webmention) => {\n\t\t// check if mention exist on disk. If exist, fetch new and overwrite. Else, create new mention.\n\t\t// write the mention to disk\n\t});\n});\nWEBMENTIONS_IO_TOKEN value need to be set on GitHub environment.\n2. Create new Astro collection\nTo create new collection, we need to edit src/content/config.ts. Remember, Astro allow user to have multiple collections, e.g. notes, webmentions, activity etc. Case below, I’m creating new collection called webmentions.\nconst webmentionsSchema = z.object({\n\turl: z.string(),\n\tpublished: z.coerce.date(),\n\t\"wm-property\": z.string(),\n\t\"wm-received\": z.coerce.date(),\n\tcontent: z\n\t\t.object({\n\t\t\ttext: z.string().optional(),\n\t\t\thtml: z.string().optional(),\n\t\t})\n\t\t.optional(),\n\tauthor: z.object({\n\t\ttype: z.string(),\n\t\tname: z.string(),\n\t\tphoto: z.string(),\n\t\turl: z.string(),\n\t}),\n});\n\nconst webmentions = defineCollection({\n\ttype: \"data\",\n\tschema: z.array(webmentionsSchema),\n});\n3. Consume the webmention data\nNow that the collection is ready, we can customize it to our liking. In my case, I’m getting like and reply. For that, create 2 component : WebmentionList.astro and WebmentionLike.astro\nWebmentionList.astro\n---\n\nconst { toot } = Astro.props;\n\nlet likeCount = [];\ntoot.map((toot) => {\n\tif (toot[\"wm-property\"] === \"like-of\") {\n\t\tlikeCount.push(toot);\n\t}\n});\nconst tootLikeCount = Object.values(likeCount).length;\n\nconst hasLike = toot.some(function (o) {\n\treturn o[\"wm-property\"] === \"like-of\";\n});\n---\n{\n\ttoot.length > 0 && (\n\t\t<div class=\"webmentions\">\n\t\t\t<div class=\"wm-header\">\n\t\t\t\t<h3>\n\t\t\t\t\tWebmention\n\t\t\t\t\t<a href=\"/toots.xml\" rel=\"me\" class=\"rss\" title=\"RSS for toots\" />\n\t\t\t\t</h3>\n\n\t\t\t\t{hasLike && (\n\t\t\t\t\t<div class=\"wm-like\">\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t{toot.map(\n\t\t\t\t\t\t\t\t(toot) =>\n\t\t\t\t\t\t\t\t\ttoot[\"wm-property\"] == \"like-of\" && (\n\t\t\t\t\t\t\t\t\t\t<WebmentionLike toot={toot} />\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t<div class=\"wm-like-count favorite\">\n\t\t\t\t\t\t\t<small>{tootLikeCount > 0 && tootLikeCount}</small>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\n\t\t\t<ul class=\"wm-list\">\n\t\t\t\t{toot.map((toot) => (\n\t\t\t\t\t<WebmentionCard toot={toot} />\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t</div>\n\t);\n}\nWebmentionLike.astro\n---\nimport type { CollectionEntry } from \"astro:content\";\ntype Props = {\n\ttoot: CollectionEntry<\"toots\">;\n};\nconst { toot } = Astro.props;\n---\n\n{\n\t(\n\t\t<li>\n\t\t\t<a href={toot.author.url}>\n\t\t\t\t<img class=\"avatar\" width=\"32\" height=\"32\" src={toot.author.photo} title={toot.author.name} />\n\t\t\t</a>\n\t\t</li>\n\t)\n}\n\n4. Push to GitHub\nSecond last step is to push the code to GitHub. Don’t forget to set WEBMENTIONS_IO_TOKEN on GitHub environment.\n5. Linked Cloudflare with GitHub\nLast step is to create new site on Cloudflare and link the site with GitHub repository on previous step.\nCredit\nhttps://sebastiandedeyne.com/adding-webmentions-to-my-blog/\nhttps://janmonschke.com/adding-webmentions-to-your-static-blog/"
    },
    "mention-of": "https://janmonschke.com/adding-webmentions-to-your-static-blog/",
    "wm-property": "mention-of",
    "wm-private": false
  },
  {
    "type": "entry",
    "author": {
      "type": "card",
      "name": "Kristof Zerbe",
      "photo": "https://avatars.webmention.io/kiko.io/486cb707eb5e20e6bd3da0e9499d5a6f02e1d83ad474192fee34d31367af68da.png",
      "url": "https://kiko.io"
    },
    "url": "https://kiko.io/notes/2024/rethinking-my-webmention-implementation/",
    "published": "2024-01-01T00:00:00",
    "wm-received": "2024-01-01T16:31:04Z",
    "wm-id": 1761430,
    "wm-source": "https://kiko.io/notes/2024/rethinking-my-webmention-implementation/",
    "wm-target": "https://janmonschke.com/adding-webmentions-to-your-static-blog",
    "wm-protocol": "webmention",
    "name": "#Link |  Rethinking my Webmention Implementation",
    "content": {
      "html": "<p>To start the new year, I decided to overhaul <a href=\"https://kiko.io/post/Hexo-and-the-IndieWeb-Receiving-Webmentions/\">my Webmention implementation</a> in the next weeks, having already revised the display of incoming Webmentions and deleted the “good old” comments without replacement during my New Year’s vacation.</p>\n<p>I was triggered by a <strong>Jan Monschke</strong> who, almost exactly a year ago, described in great detail how he implemented #Webmentions on his GitHub-based blog and used its <a href=\"https://github.com/features/actions\">#Actions</a>. The local storage of the data is particularly relevant for me here, as I currently only load it in the post via JavaScript from my endpoint <a href=\"https://webmention.io/\">webmention.io</a>. If the site goes down, there is suboptimally nothing more to see…</p>\n<p>This will also be a good opportunity to finally integrate my Notes into the automatic Webmention sending (incl. setting the correct verbs such as <code>u-like-of</code>, <code>u-bookmark-of</code>, etc.), because at the moment I still do this manually via <a href=\"https://webmention.app/\">webmention.app</a>.</p>\n<p><strong>Let’s go</strong> … and a happy new year to everyone on the #IndieWeb</p>\n<p><a href=\"https://janmonschke.com/adding-webmentions-to-your-static-blog\">&gt;&gt;&gt; janmonschke.com: Adding webmentions to your static blog</a></p>",
      "text": "To start the new year, I decided to overhaul my Webmention implementation in the next weeks, having already revised the display of incoming Webmentions and deleted the “good old” comments without replacement during my New Year’s vacation.\nI was triggered by a Jan Monschke who, almost exactly a year ago, described in great detail how he implemented #Webmentions on his GitHub-based blog and used its #Actions. The local storage of the data is particularly relevant for me here, as I currently only load it in the post via JavaScript from my endpoint webmention.io. If the site goes down, there is suboptimally nothing more to see…\nThis will also be a good opportunity to finally integrate my Notes into the automatic Webmention sending (incl. setting the correct verbs such as u-like-of, u-bookmark-of, etc.), because at the moment I still do this manually via webmention.app.\nLet’s go … and a happy new year to everyone on the #IndieWeb\n>>> janmonschke.com: Adding webmentions to your static blog"
    },
    "mention-of": "https://janmonschke.com/adding-webmentions-to-your-static-blog",
    "wm-property": "mention-of",
    "wm-private": false,
    "rels": {
      "canonical": "https://kiko.io/notes/2024/rethinking-my-webmention-implementation/"
    }
  },
  {
    "type": "entry",
    "author": {
      "type": "card",
      "name": "",
      "photo": "",
      "url": ""
    },
    "url": "https://www.bobmonsour.com/posts/adding-webmentions-to-my-site/",
    "published": null,
    "wm-received": "2024-01-20T21:29:16Z",
    "wm-id": 1769686,
    "wm-source": "https://www.bobmonsour.com/posts/adding-webmentions-to-my-site/",
    "wm-target": "https://janmonschke.com/adding-webmentions-to-your-static-blog/",
    "wm-protocol": "webmention",
    "mention-of": "https://janmonschke.com/adding-webmentions-to-your-static-blog/",
    "wm-property": "mention-of",
    "wm-private": false,
    "rels": {
      "canonical": "https://www.bobmonsour.com/posts/adding-webmentions-to-my-site/"
    }
  },
  {
    "type": "entry",
    "author": {
      "type": "card",
      "name": "",
      "photo": "",
      "url": ""
    },
    "url": "https://www.rousette.org.uk/archives/some-blog-housekeeping/",
    "published": null,
    "wm-received": "2024-02-17T16:28:16Z",
    "wm-id": 1782089,
    "wm-source": "https://www.rousette.org.uk/archives/some-blog-housekeeping/",
    "wm-target": "https://janmonschke.com/adding-webmentions-to-your-static-blog/#fnref3",
    "wm-protocol": "webmention",
    "mention-of": "https://janmonschke.com/adding-webmentions-to-your-static-blog/#fnref3",
    "wm-property": "mention-of",
    "wm-private": false,
    "rels": {
      "canonical": "https://www.rousette.org.uk/archives/some-blog-housekeeping/"
    }
  },
  {
    "type": "entry",
    "author": {
      "type": "card",
      "name": "Kristof Zerbe",
      "photo": "https://avatars.webmention.io/kiko.io/486cb707eb5e20e6bd3da0e9499d5a6f02e1d83ad474192fee34d31367af68da.png",
      "url": "https://kiko.io"
    },
    "url": "https://kiko.io/post/Head-Care/",
    "published": "2024-07-18T08:38:17",
    "wm-received": "2024-07-18T17:57:56Z",
    "wm-id": 1839547,
    "wm-source": "https://kiko.io/post/Head-Care/",
    "wm-target": "https://janmonschke.com/adding-webmentions-to-your-static-blog/",
    "wm-protocol": "webmention",
    "name": "Head Care",
    "syndication": [
      "https://indieweb.social/@kiko/112808925304713486",
      "https://dev.to/kristofzerbe/head-care-cleaning-up-meta-and-link-tags-1a93"
    ],
    "summary": {
      "content-type": "text/plain",
      "value": "Cleaning up META and LINK tags"
    },
    "content": {
      "html": "<p>Actually, I just wanted to add the <a href=\"https://opml.org/blogroll.opml\">blogroll link tag</a> to the header of my blog, which <a href=\"http://davewiner.com/\">Dave Winer</a> mentioned in a comment on Dan Q’s post <a href=\"https://danq.me/2023/08/23/well-known-feeds/#comment-246479\">.well-known/feeds</a>. But since I was already in my <a href=\"https://github.com/kristofzerbe/kiko.io/blob/master/themes/landscape/layout/_partial/head.ejs\"><code>head.ejs</code></a>, I tidied up and reorganised it a bit. It’s like a basement: you just put things in there and at some point it looks messy.</p>\n<p>So I went through every META and LINK tag and researched it in documentaries or pseudo-documentaries and also looked at a lot of page sources from sites whose creators should know how to do it. The picture wasn’t consistent, how could it be otherwise, but I did pick up a few things, including new ones, and integrated them in my head. (Nice wordplay)</p>\n<span></span>\n\nTable of Contents<ul><li>meta name=\"viewport\"</li><li>meta name=\"generator\"</li><li>link rel=\"canonical\"</li><li>meta name=\"title | description | excerpt\"</li><li>meta property=\"og: ...\"</li><li>meta property=\"twitter: ...\"</li><li>link rel=\"license\"</li><li>meta name=\"author\"</li><li>meta name=\"fediverse:creator\"</li><li>link rel=\"me\"</li><li>link rel=\"webmention | pingback\"</li><li>link rel=\"blogroll\"</li><li>link rel=\"search\"</li><li>script type=\"application/ld+json\"</li><li>link rel=\"alternate\"</li><li>link rel=\"manifest\"</li><li>link rel=\"icon | apple-touch-icon\"</li><li>meta name=\"theme-color\"</li><li>meta name=\"color-scheme\"</li><li>link rel=\"preload\"</li><li>link rel=\"stylesheet\"</li>\n        </ul><h2><a href=\"https://kiko.io/post/Head-Care/#meta-name-%E2%80%9Dviewport%E2%80%9D\" title=\"meta name=”viewport”\"></a>meta name=”viewport”</h2><p>This HTML5 classic has remained unchanged and is essential for a responsive web design. It tells the browser how to control the dimensions and scaling of the viewport.</p>\n<pre><code><span>&lt;<span>meta</span> <span>name</span>=<span>\"viewport\"</span> <span>content</span>=<span>\"width=device-width, initial-scale=1\"</span>&gt;</span></code></pre>\n\n\n      More Info:\n      <ul><li>MDN Web Docs: <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Viewport_meta_tag\">Viewport meta tag</a></li>\n      </ul><h2><a href=\"https://kiko.io/post/Head-Care/#meta-name-%E2%80%9Dgenerator%E2%80%9D\" title=\"meta name=”generator”\"></a>meta name=”generator”</h2><p>This tag indicates which software was used to generate a website and I have noticed it in some page source texts and it is also included in the HTML5 specs. I couldn’t find out what deeper meaning this information has for browsers/crawlers et al, but I’m always up for useless but descriptive things :)</p>\n<pre><code><span>&lt;<span>meta</span> <span>name</span>=<span>\"generator\"</span> <span>content</span>=<span>\"Hexo 7.2.0\"</span>&gt;</span></code></pre>\n\n\n      More Info:\n      <ul><li>whatwg.org: <a href=\"https://html.spec.whatwg.org/multipage/semantics.html#standard-metadata-names\">HTML Standard - Standard metadata names</a></li>\n      </ul><h2><a href=\"https://kiko.io/post/Head-Care/#link-rel-%E2%80%9Dcanonical%E2%80%9D\" title=\"link rel=”canonical”\"></a>link rel=”canonical”</h2><p>One of the most important link tags intended for search engines, it indicates whether a page is “canonical”, i.e. the only true source of information. It identifies the preferred and most representative version of a piece of content that may be available on several URLs and prevents it from slipping down the search engine index due to duplicates.</p>\n<pre><code><span>&lt;<span>link</span> <span>rel</span>=<span>\"canonical\"</span> <span>href</span>=<span>\"https://kiko.io/post/Head-Care/\"</span>&gt;</span></code></pre>\n\n\n      More Info:\n      <ul><li>Wikipedia: <a href=\"https://en.wikipedia.org/wiki/Canonical_link_element\">Canonical link element</a></li><li>Google Search Central: <a href=\"https://developers.google.com/search/docs/crawling-indexing/consolidate-duplicate-urls\">How to specify a canonical with rel=\"canonical\" and other methods</a></li>\n      </ul><h2><a href=\"https://kiko.io/post/Head-Care/#meta-name-%E2%80%9Dtitle-description-excerpt%E2%80%9D\" title=\"meta name=”title | description | excerpt”\"></a>meta name=”title | description | excerpt”</h2><p>These three tags form the foundation for all automatic processing of a page, be it search engines, social media services or those from the federated web. Without them, there are no headlines or teaser texts on Google and Co. and you will probably not even be included in the index.</p>\n<p>I keep fiddling around with the excerpt again and again, because it is sometimes quite complex to generate a reasonable text excerpt from my Markdown content. I haven’t found the ultimate solution yet. At the moment I’m trying to help myself with RegEx and a few libs.</p>\n<p>By the way, I have completely stopped offering meta keywords at this point. They don’t really work anyway and are more of a relic from the past.</p>\n<pre><code><span>&lt;<span>meta</span> <span>name</span>=<span>\"title\"</span> <span>content</span>=<span>\"Head Care - kiko.io\"</span>&gt;</span>\n<span>&lt;<span>meta</span> <span>name</span>=<span>\"description\"</span> <span>content</span>=<span>\"Cleaning up META and LINK tags\"</span>&gt;</span>\n<span>&lt;<span>meta</span> <span>name</span>=<span>\"excerpt\"</span> <span>content</span>=<span>\"Actually, I just wanted to add ... [more text]\"</span></span></code></pre>\n\n\n      More Info:\n      <ul><li>whatwg.org: <a href=\"https://html.spec.whatwg.org/multipage/semantics.html#standard-metadata-names\">HTML Standard - Standard metadata names</a></li>\n      </ul><h2><a href=\"https://kiko.io/post/Head-Care/#meta-property-%E2%80%9Dog-%E2%80%A6%E2%80%9D\" title=\"meta property=”og: …”\"></a>meta property=”og: …”</h2><p>Open Graph, and thus the <code>og:</code> meta tags, is an invention of Facebook, but is now very widespread, open source and has become a near-standard. It defines attributes that make an object, in this case a web page, an object in a <strong>social graph</strong>. We already know <code>url</code>, <code>title</code> and <code>description</code> from other meta tags, which are repeated here but enriched with additional attributes. I find <code>og:image</code> as a very useful way of specifying a representation image that is displayed as a visual equivalent when linking to a Facebook or Mastodon post, for example.</p>\n<pre><code><span>&lt;<span>meta</span> <span>property</span>=<span>\"og:site_name\"</span> <span>content</span>=<span>\"kiko.io\"</span>&gt;</span>\n<span>&lt;<span>meta</span> <span>property</span>=<span>\"og:type\"</span> <span>content</span>=<span>\"blog\"</span>&gt;</span>\n<span>&lt;<span>meta</span> <span>property</span>=<span>\"og:url\"</span> <span>content</span>=<span>\"https://kiko.io/post/Head-Care/\"</span>&gt;</span>\n<span>&lt;<span>meta</span> <span>property</span>=<span>\"og:title\"</span> <span>content</span>=<span>\"Head Care - kiko.io\"</span>&gt;</span>\n<span>&lt;<span>meta</span> <span>property</span>=<span>\"og:description\"</span> <span>content</span>=<span>\"Cleaning up META and LINK tags\"</span>&gt;</span>\n<span>&lt;<span>meta</span> <span>property</span>=<span>\"og:logo\"</span> <span>content</span>=<span>\"https://kiko.io/images/icon-192x192.png\"</span> /&gt;</span>\n<span>&lt;<span>meta</span> <span>property</span>=<span>\"og:image\"</span> <span>content</span>=<span>\"https://kiko.io/images/social-media/Head-Care.png\"</span>&gt;</span>\n<span>&lt;<span>meta</span> <span>property</span>=<span>\"og:locale\"</span> <span>content</span>=<span>\"en_US\"</span>&gt;</span></code></pre>\n\n\n      More Info:\n      <ul><li><a href=\"https://ogp.me/\">The Open Graph protocol</a></li>\n      </ul><h2><a href=\"https://kiko.io/post/Head-Care/#meta-property-%E2%80%9Dtwitter-%E2%80%A6%E2%80%9D\" title=\"meta property=”twitter: …”\"></a>meta property=”twitter: …”</h2><p>The so-called Twitter Card Tags were a kind of counter-design from Twitter to Facebook’s Open Graph and generally complement it today. I don’t really fancy anything that comes out of Elon Musk’s social media toy shop any more, but for the sake of tradition and to remain compatible, I’m leaving them in as they are.</p>\n<p>What do you think? Should they be taken out?</p>\n<pre><code><span>&lt;<span>meta</span> <span>property</span>=<span>\"twitter:card\"</span> <span>content</span>=<span>\"summary_large_image\"</span>&gt;</span>\n<span>&lt;<span>meta</span> <span>property</span>=<span>\"twitter:url\"</span> <span>content</span>=<span>\"https://kiko.io/post/Head-Care/\"</span>&gt;</span>\n<span>&lt;<span>meta</span> <span>property</span>=<span>\"twitter:title\"</span> <span>content</span>=<span>\"Head Care - kiko.io\"</span>&gt;</span>\n<span>&lt;<span>meta</span> <span>property</span>=<span>\"twitter:description\"</span> <span>content</span>=<span>\"Cleaning up META and LINK tags\"</span>&gt;</span>\n<span>&lt;<span>meta</span> <span>property</span>=<span>\"twitter:image\"</span> <span>content</span>=<span>\"https://kiko.io/images/social-media/Head-Care.png\"</span>&gt;</span></code></pre>\n\n\n      More Info:\n      <ul><li>Twitter Developer Platform: <a href=\"https://developer.x.com/en/docs/twitter-for-websites/cards/overview/markup\">Getting started with Cards</a></li>\n      </ul><h2><a href=\"https://kiko.io/post/Head-Care/#link-rel-%E2%80%9Dlicense%E2%80%9D\" title=\"link rel=”license”\"></a>link rel=”license”</h2><p>I have copied these two tags from <a href=\"https://notiz.blog/\">Matthias Pfefferle’s notizBlog</a>. I think it’s good to make it machine-readable under which conditions the output of my brain and fingers can be used by others. Until now, I only had a corresponding badge with a link on my <a href=\"https://kiko.io/photos\">photos page</a>.</p>\n<pre><code><span>&lt;<span>link</span> <span>rel</span>=<span>\"license\"</span> <span>href</span>=<span>\"https://creativecommons.org/licenses/by-sa/4.0/\"</span> <span>type</span>=<span>\"text/html\"</span> /&gt;</span>\n<span>&lt;<span>link</span> <span>rel</span>=<span>\"license\"</span> <span>href</span>=<span>\"https://creativecommons.org/licenses/by-sa/4.0/rdf\"</span> <span>type</span>=<span>\"application/rdf+xml\"</span> /&gt;</span></code></pre>\n\n\n      More Info:\n      <ul><li>CreativeCommons: <a href=\"https://opensource.creativecommons.org/ccrel-guide/\">CC REL by Example</a></li><li>Microformats Wiki: <a href=\"https://microformats.org/wiki/rel-license\">rel=\"license\"</a></li>\n      </ul><h2><a href=\"https://kiko.io/post/Head-Care/#meta-name-%E2%80%9Dauthor%E2%80%9D\" title=\"meta name=”author”\"></a>meta name=”author”</h2><p>So that everyone knows who is responsible by name for what you are forced to read here, there is this tag. However, there is always discussion as to whether this should be the web creator or the author of the text. In my case, it doesn’t make any difference.</p>\n<pre><code><span>&lt;<span>meta</span> <span>name</span>=<span>\"author\"</span> <span>content</span>=<span>\"Kristof Zerbe\"</span>&gt;</span></code></pre>\n\n\n      More Info:\n      <ul><li>whatwg.org: <a href=\"https://html.spec.whatwg.org/multipage/semantics.html#standard-metadata-names\">HTML Standard - Standard metadata names</a></li>\n      </ul><h2><a href=\"https://kiko.io/post/Head-Care/#meta-name-%E2%80%9Dfediverse-creator%E2%80%9D\" title=\"meta name=”fediverse:creator”\"></a>meta name=”fediverse:creator”</h2><p>Here’s the newest kid in town … launched by the creators of <a href=\"https://joinmastodon.org/\">Mastodon</a> to make journalists and others in the writing world more visible. It allows authors who work with multiple publishers or platforms to link directly to their presence in the Fediverse and thereby connecting the users to the person itself. Syndicated posts from platforms that support the new feature will have a link to the author’s handle below the post. I don’t really need that thing, but it’s neat and who knows what else the Fedi people will come up with.</p>\n<pre><code><span>&lt;<span>meta</span> <span>name</span>=<span>\"fediverse:creator\"</span> <span>content</span>=<span>\"@kiko@indieweb.social\"</span>&gt;</span></code></pre>\n\n\n      More Info:\n      <ul><li>Mastodon Blog - Eugen Rochko: <a href=\"https://blog.joinmastodon.org/2024/07/highlighting-journalism-on-mastodon/\">Highlighting journalism on Mastodon</a></li><li>Chris McLeod: <a href=\"https://chrismcleod.dev/blog/adding-the-new-mastodon-link-attribution-meta-tag/\">Adding the New Mastodon Link Attribution Meta Tag</a></li>\n      </ul><h2><a href=\"https://kiko.io/post/Head-Care/#link-rel-%E2%80%9Dme%E2%80%9D\" title=\"link rel=”me”\"></a>link rel=”me”</h2><p>I use these tags to link my blog to my other identities/profile pages on the web to show that the same person is represented on both sides. A simple identity verification, which is also the foundation for IndieWeb authentication services such as <a href=\"https://indieauth.com/\">IndieAuth</a>, as used on <a href=\"https://kiko.io/post/Head-Care/webmention.io\">webmention.io</a>, for example. With the additional <code>authn</code> I select which providers are considered for authentication. Mastodon uses this for the green tick in the profile also.</p>\n<pre><code><span>&lt;<span>link</span> <span>rel</span>=<span>\"me\"</span> <span>href</span>=<span>\"https://indieweb.social/@kiko\"</span>&gt;</span>\n<span>&lt;<span>link</span> <span>rel</span>=<span>\"me authn\"</span> <span>href</span>=<span>\"https://github.com/kristofzerbe\"</span>&gt;</span>\n<span>&lt;<span>link</span> <span>rel</span>=<span>\"me authn\"</span> <span>href</span>=<span>\"mailto:kristof.zerbe@gmail.com\"</span>&gt;</span></code></pre>\n\n\n      More Info:\n      <ul><li>IndieWeb: <a href=\"https://indieweb.org/rel-m\">rel-me</a></li><li>Microformats Wiki: <a href=\"https://microformats.org/wiki/RelMeAuth\">RelMeAuth</a></li><li>auth.hawx.me: <a href=\"https://auth.hawx.me/\">relme-auth - Sign in with your domain</a></li>\n      </ul><h2><a href=\"https://kiko.io/post/Head-Care/#link-rel-%E2%80%9Dwebmention-pingback%E2%80%9D\" title=\"link rel=”webmention | pingback”\"></a>link rel=”webmention | pingback”</h2><p>This blog is a static one and lives on GitHub Pages, i.e. there is no reactive component in the background that could respond to any kind of request, apart from retrieving pages. However, if someone wants to send me a so-called Webmention (or a slightly older Pingback), someone should answer and in my case this is the fabulous <a href=\"https://webmention.io/\">Webmention.io</a> service from <a href=\"https://aaronparecki.com/\">Aaron Parecki</a> and I let all requesters know this, with these two tags.</p>\n<pre><code><span>&lt;<span>link</span> <span>rel</span>=<span>\"webmention\"</span> <span>href</span>=<span>\"https://webmention.io/kiko.io/webmention\"</span> /&gt;</span>\n<span>&lt;<span>link</span> <span>rel</span>=<span>\"pingback\"</span> <span>href</span>=<span>\"https://webmention.io/kiko.io/xmlrpc\"</span> /&gt;</span></code></pre>\n\n\n      More Info:\n      <ul><li>IndieWeb: <a href=\"https://indieweb.org/Webmention\">Webmention</a></li><li>Jan Monschke: <a href=\"https://janmonschke.com/adding-webmentions-to-your-static-blog/\">Adding webmentions to your static blog</a></li><li>(myself): <a href=\"https://kiko.io/post/Hexo-and-the-IndieWeb-Receiving-Webmentions/\">Hexo and the IndieWeb (Receiving Webmentions)</a></li>\n      </ul><h2><a href=\"https://kiko.io/post/Head-Care/#link-rel-%E2%80%9Dblogroll%E2%80%9D\" title=\"link rel=”blogroll”\"></a>link rel=”blogroll”</h2><p>Now let’s get to the main reason for this post … (see introduction above). I’ve had a <a href=\"https://kiko.io/notes/2024/Blogroll-Feed-Heavyweight-Championship/\">lot of fun</a> implementing my own <a href=\"https://kiko.io/blogroll\">blogroll</a> into my SSG Hexo over the last few weeks and the news that someone is trying to bring the many blogrolls on the web together is exciting. No one knows exactly what that might look like yet, but it’s like Dan Q. says:</p>\n<blockquote>\n<p>Now all we need is some tools that can do such detection!</p>\n</blockquote>\n<br /><pre><code><span>&lt;<span>link</span> <span>rel</span>=<span>\"blogroll\"</span> <span>type</span>=<span>\"text/xml\"</span> <span>href</span>=<span>\"https://kiko.io/blogroll.xml\"</span> <span>title</span>=<span>\"kiko.io<span>&amp;#39;</span>s Blogroll\"</span>&gt;</span></code></pre>\n\n\n      More Info:\n      <ul><li>Dan Q.: <a href=\"https://danq.me/2024/05/03/23615/\">link rel=\"blogroll\"</a></li><li>opml.org (Dave Winer): <a href=\"https://opml.org/blogroll.opml\">About blogrolls</a></li>\n      </ul><h2><a href=\"https://kiko.io/post/Head-Care/#link-rel-%E2%80%9Dsearch%E2%80%9D\" title=\"link rel=”search”\"></a>link rel=”search”</h2><p>Last year I integrated a <a href=\"https://kiko.io/post/Integration-of-Pagefind-in-Hexo/\">search via Pagefind into this blog</a> and thus made myself a little less dependent on Google. What I forgot to do is to technically explain to a search engine how my search mechanism can be used so that the user can go directly from the search to my search results. This can be done via an XML file in OpenSearch description format</p>\n<pre><code><span>&lt;<span>link</span> <span>rel</span>=<span>\"search\"</span> <span>type</span>=<span>\"application/opensearchdescription+xml\"</span> <span>href</span>=<span>\"https://kiko.io/opensearch.xml\"</span> <span>title</span>=<span>\"kiko.io\"</span>/&gt;</span></code></pre>\n\n\n      More Info:\n      <ul><li>Arthur Denner: <a href=\"https://arthurdenner.hashnode.dev/how-to-implement-a-search-shortcut-opensearch-on-any-website\">How to implement a search shortcut (OpenSearch) on any website</a></li><li>Microsoft Learn: <a href=\"https://learn.microsoft.com/en-us/windows/win32/search/-search-federated-search-osdx-file\">Creating an OpenSearch Description File in Windows Federated Search</a></li><li>MDN Web Docs: <a href=\"https://developer.mozilla.org/en-US/docs/Web/OpenSearch\">OpenSearch description format</a></li>\n      </ul><h2><a href=\"https://kiko.io/post/Head-Care/#script-type-%E2%80%9Dapplication-ld-json%E2%80%9D\" title=\"script type=”application/ld+json”\"></a>script type=”application/ld+json”</h2><p>Of course, my head element also contains the JSON-LD script that I wrote about over a year ago and which I suspect will basically replace the meta and link tag world in the long run with regard to search engines, because it’s simply better structured and can probably be processed more easily as the stuff above.</p>\n<pre><code><span>&lt;<span>script</span> <span>type</span>=<span>\"application/ld+json\"</span>&gt;</span><span>{ <span>\"@context\"</span>:<span>\"http://schema.org/\"</span>, ... [more code] }</span><span>&lt;/<span>script</span>&gt;</span></code></pre>\n\n\n      More Info:\n      <ul><li>Google Search Central: <a href=\"https://developers.google.com/search/docs/appearance/structured-data/intro-structured-data\">Introduction to structured data markup in Google Search</a></li><li>(myself): <a href=\"https://kiko.io/post/Provide-Blog-Metadata-via-JSON-LD/\">Provide Blog Metadata via JSON-LD</a></li>\n      </ul><h2><a href=\"https://kiko.io/post/Head-Care/#link-rel-%E2%80%9Dalternate%E2%80%9D\" title=\"link rel=”alternate”\"></a>link rel=”alternate”</h2><p>It’s always good to make things easy for your users. This also applies to finding a feed on a website, in whatever form. For the so-called <em>feed autodiscovery</em> specified in HTML5, <code>alternate</code> link tags with the corresponding MIME type are used. I have integrated several different <a href=\"https://kiko.io/feeds\">feeds</a> (Atom, RSS, JSON and HTML) on my site and placed the variants with the complete text in the autodiscovery.</p>\n<p>What appeals to me now is what Dan Q. brought up in the post in the introduction to this article: <a href=\"https://danq.me/2023/08/23/well-known-feeds\"><code>.well-known/feeds</code></a>. Let’s see if I can tinker with it tonight or tomorrow …</p>\n<pre><code><span>&lt;<span>link</span> <span>rel</span>=<span>\"alternate\"</span> <span>type</span>=<span>\"application/atom+xml\"</span> <span>href</span>=<span>\"https://kiko.io/atom.xml\"</span> <span>title</span>=<span>\"kiko.io<span>&amp;#39;</span>s Atom Feed (Full Content)\"</span>&gt;</span>\n<span>&lt;<span>link</span> <span>rel</span>=<span>\"alternate\"</span> <span>type</span>=<span>\"application/rss+xml\"</span> <span>href</span>=<span>\"https://kiko.io/rss.xml\"</span> <span>title</span>=<span>\"kiko.io<span>&amp;#39;</span>s RSS Feed (Full Content)\"</span>&gt;</span>\n<span>&lt;<span>link</span> <span>rel</span>=<span>\"alternate\"</span> <span>type</span>=<span>\"application/json\"</span> <span>href</span>=<span>\"https://kiko.io/feed.json\"</span> <span>title</span>=<span>\"kiko.io<span>&amp;#39;</span>s JSON Feed (Full Content)\"</span>&gt;</span>\n<span>&lt;<span>link</span> <span>rel</span>=<span>\"alternate\"</span> <span>type</span>=<span>\"application/mf2+html\"</span> <span>href</span>=<span>\"https://kiko.io/feeds/index.html\"</span> <span>title</span>=<span>\"kiko.io<span>&amp;#39;</span>s HTML Microformats Feed (Excerpt)\"</span>&gt;</span></code></pre>\n\n\n      More Info:\n      <ul><li>The WHATWG Blog: <a href=\"https://blog.whatwg.org/feed-autodiscovery\">Feed Autodiscovery</a></li><li>whatwg.org: <a href=\"https://html.spec.whatwg.org/#rel-alternate\">HTML Standard - Link type \"alternate\"</a></li><li>Microformats Wiki: <a href=\"https://microformats.org/wiki/rel-alternate\">rel-alternate</a></li><li>Jim Nielsen: <a href=\"https://blog.jim-nielsen.com/2021/automatically-discoverable-rss-feeds/\">Making Your RSS Feeds Automatically Discoverable</a></li>\n      </ul><h2><a href=\"https://kiko.io/post/Head-Care/#link-rel-%E2%80%9Dmanifest%E2%80%9D\" title=\"link rel=”manifest”\"></a>link rel=”manifest”</h2><p>Is a blog an app? I think so. An app for reading stuff. That’s why it makes sense for me to technically raise my blog to the same level as WebApps/PWA’s by offering a corresponding <a href=\"https://kiko.io/manifest.json\">manifest</a>, that shows the browser how to install kiko.io on the system, if the user want to.</p>\n<pre><code><span>&lt;<span>link</span> <span>rel</span>=<span>\"manifest\"</span> <span>href</span>=<span>\"/manifest.json\"</span>&gt;</span></code></pre>\n\n\n      More Info:\n      <ul><li>MDN Web Docs: <a href=\"https://developer.mozilla.org/en-US/docs/Web/Manifest\">Web app manifests</a></li>\n      </ul><h2><a href=\"https://kiko.io/post/Head-Care/#link-rel-%E2%80%9Dicon-apple-touch-icon%E2%80%9D\" title=\"link rel=”icon | apple-touch-icon”\"></a>link rel=”icon | apple-touch-icon”</h2><p>In addition to the information on the manifest, which already contains pretty much all the information a browser needs to display the website nicely on his OS, this classic is part of the standard repertoire and should not be missing. Nothing is duller than a browser tab without an icon. Since Apple always does everything a little differently, a PNG image should be provided for iOS.</p>\n<p>As with all resources, relative paths are useful here so that the site is also displayed correctly during local development.</p>\n<pre><code><span>&lt;<span>link</span> <span>rel</span>=<span>\"icon\"</span> <span>href</span>=<span>\"/favicon.ico\"</span>&gt;</span>\n<span>&lt;<span>link</span> <span>rel</span>=<span>\"apple-touch-icon\"</span> <span>href</span>=<span>\"/images/apple-touch-icon.png\"</span>&gt;</span></code></pre>\n\n\n      More Info:\n      <ul><li>W3C: <a href=\"https://www.w3.org/2005/10/howto-favicon\">How to Add a Favicon to your Site</a></li><li>webhint: <a href=\"https://webhint.io/docs/user-guide/hints/hint-apple-touch-icons/\">Use Apple Touch Icon</a></li>\n      </ul><h2><a href=\"https://kiko.io/post/Head-Care/#meta-name-%E2%80%9Dtheme-color%E2%80%9D\" title=\"meta name=”theme-color”\"></a>meta name=”theme-color”</h2><p>This tag is similar to the icon and can also be found in the manifest, but it is not a bad idea to tell the browser the desired color for the environment in this way too.</p>\n<pre><code><span>&lt;<span>meta</span> <span>name</span>=<span>\"theme-color\"</span> <span>content</span>=<span>\"#444\"</span>&gt;</span></code></pre>\n\n\n      More Info:\n      <ul><li>MDN Web Docs: <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta/name/theme-color\">theme-color</a></li>\n      </ul><h2><a href=\"https://kiko.io/post/Head-Care/#meta-name-%E2%80%9Dcolor-scheme%E2%80%9D\" title=\"meta name=”color-scheme”\"></a>meta name=”color-scheme”</h2><p>The <code>color-scheme</code> tag points in a slightly different direction than the previous one. It can be used to specify whether and which color scheme the website supports: <strong>light</strong> or <strong>dark</strong> or both. I am a great advocate of <a href=\"https://kiko.io/post/don-t-be-ignorant-and-offer-a-theme-switch/\">individual theme switches</a>, but for this you first have to implement and offer two different themes in the CSS. This tag makes the presence of these known to the browser.</p>\n<p>I have also used the tag so far and built a theme switch around it, but I have overlooked one thing:</p>\n<blockquote>\n<p>Providing both keywords indicates that the first scheme is preferred (by the author), but the second is also acceptable if the user prefers it instead.</p>\n</blockquote>\n<p>I’ve defined them the wrong way round so far, as I’m not a fan of dark themes and prefer the light ones.</p>\n<pre><code><span>&lt;<span>meta</span> <span>name</span>=<span>\"color-scheme\"</span> <span>content</span>=<span>\"light dark\"</span>&gt;</span></code></pre>\n\n\n      More Info:\n      <ul><li>web.dev (Thomas Steiner): <a href=\"https://web.dev/articles/color-scheme\">Improved dark mode default styling with the color-scheme CSS property and the corresponding meta tag</a></li>\n      </ul><h2><a href=\"https://kiko.io/post/Head-Care/#link-rel-%E2%80%9Dpreload%E2%80%9D\" title=\"link rel=”preload”\"></a>link rel=”preload”</h2><p>I use special web fonts and an individual photo for each page. To preload these files before they are actually used, it makes sense to use the PRELOAD link, which tells the browser: <em>“Hey, I’m going to need this anyway. Load it now”</em>.</p>\n<p>It is essential to inform the browser of the correct MIME type of the resource and to indicate the specific class via the <code>as</code> attribute. The additional attribute <code>crossorigin</code> is only required if the resource is not located on your own server, as it is then retrieved using a CORS request.</p>\n<pre><code><span>&lt;<span>link</span> <span>rel</span>=<span>\"preload\"</span> <span>as</span>=<span>\"font\"</span> <span>type</span>=<span>\"font/woff2\"</span> <span>href</span>=<span>\"/css/fonts/lexend/webfonts/Lexend-ExtraLight.woff2\"</span>&gt;</span>\n...\n<span>&lt;<span>link</span> <span>rel</span>=<span>\"preload\"</span> <span>as</span>=<span>\"image\"</span> <span>type</span>=<span>\"image/jpeg\"</span> <span>href</span>=<span>\"/images/social-media/Head-Care.png\"</span> <span>imagesrcset</span>=<span>\"/images/social-media/Head-Care.png 480w, /images/social-media/Head-Care.png 768w\"</span>&gt;</span></code></pre>\n\n\n      More Info:\n      <ul><li>MDN Web Doc: <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/rel/preload\">rel=preload</a></li><li>whatwg.org: <a href=\"https://html.spec.whatwg.org/multipage/links.html#link-type-preload\">HTML Standard - Link type \"preload\"</a></li>\n      </ul><h2><a href=\"https://kiko.io/post/Head-Care/#link-rel-%E2%80%9Dstylesheet%E2%80%9D\" title=\"link rel=”stylesheet”\"></a>link rel=”stylesheet”</h2><p>Yes, of course. For the sake of completeness, I have to mention the links via which the CSS is loaded into the page as an external resource also. Without these, the web would look dull and empty.</p>\n<pre><code><span>&lt;<span>link</span> <span>rel</span>=<span>\"stylesheet\"</span> <span>href</span>=<span>\"/css/dist/asset-bundle.min.css\"</span>&gt;</span>\n<span>&lt;<span>link</span> <span>rel</span>=<span>\"stylesheet\"</span> <span>href</span>=<span>\"/css/style.css\"</span>&gt;</span></code></pre>\n\n\n      More Info:\n      <ul><li>MDN Web Docs: <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link\">The External Resource Link element</a></li><li>freeCodeCamp: <a href=\"https://www.freecodecamp.org/news/how-to-link-css-to-html/\">How to Link CSS to HTML – Stylesheet File Linking</a></li>\n      </ul><h2><a href=\"https://kiko.io/post/Head-Care/#Conclusion\" title=\"Conclusion\"></a>Conclusion</h2><p>Small cause, big effect. I learnt a lot from refactoring my HEAD and I have to admit that I’m tempted to take a closer look at all those <a href=\"https://wiki.whatwg.org/wiki/MetaExtensions\">extensions</a>. I would at least be satified, if the work I have done here, can also improve your header a little.</p>\n<p>Happy Coding :)</p>",
      "text": "Actually, I just wanted to add the blogroll link tag to the header of my blog, which Dave Winer mentioned in a comment on Dan Q’s post .well-known/feeds. But since I was already in my head.ejs, I tidied up and reorganised it a bit. It’s like a basement: you just put things in there and at some point it looks messy.\nSo I went through every META and LINK tag and researched it in documentaries or pseudo-documentaries and also looked at a lot of page sources from sites whose creators should know how to do it. The picture wasn’t consistent, how could it be otherwise, but I did pick up a few things, including new ones, and integrated them in my head. (Nice wordplay)\n\n\nTable of Contentsmeta name=\"viewport\"meta name=\"generator\"link rel=\"canonical\"meta name=\"title | description | excerpt\"meta property=\"og: ...\"meta property=\"twitter: ...\"link rel=\"license\"meta name=\"author\"meta name=\"fediverse:creator\"link rel=\"me\"link rel=\"webmention | pingback\"link rel=\"blogroll\"link rel=\"search\"script type=\"application/ld+json\"link rel=\"alternate\"link rel=\"manifest\"link rel=\"icon | apple-touch-icon\"meta name=\"theme-color\"meta name=\"color-scheme\"link rel=\"preload\"link rel=\"stylesheet\"\n        meta name=”viewport”This HTML5 classic has remained unchanged and is essential for a responsive web design. It tells the browser how to control the dimensions and scaling of the viewport.\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\n\n      More Info:\n      MDN Web Docs: Viewport meta tag\n      meta name=”generator”This tag indicates which software was used to generate a website and I have noticed it in some page source texts and it is also included in the HTML5 specs. I couldn’t find out what deeper meaning this information has for browsers/crawlers et al, but I’m always up for useless but descriptive things :)\n<meta name=\"generator\" content=\"Hexo 7.2.0\">\n\n\n      More Info:\n      whatwg.org: HTML Standard - Standard metadata names\n      link rel=”canonical”One of the most important link tags intended for search engines, it indicates whether a page is “canonical”, i.e. the only true source of information. It identifies the preferred and most representative version of a piece of content that may be available on several URLs and prevents it from slipping down the search engine index due to duplicates.\n<link rel=\"canonical\" href=\"https://kiko.io/post/Head-Care/\">\n\n\n      More Info:\n      Wikipedia: Canonical link elementGoogle Search Central: How to specify a canonical with rel=\"canonical\" and other methods\n      meta name=”title | description | excerpt”These three tags form the foundation for all automatic processing of a page, be it search engines, social media services or those from the federated web. Without them, there are no headlines or teaser texts on Google and Co. and you will probably not even be included in the index.\nI keep fiddling around with the excerpt again and again, because it is sometimes quite complex to generate a reasonable text excerpt from my Markdown content. I haven’t found the ultimate solution yet. At the moment I’m trying to help myself with RegEx and a few libs.\nBy the way, I have completely stopped offering meta keywords at this point. They don’t really work anyway and are more of a relic from the past.\n<meta name=\"title\" content=\"Head Care - kiko.io\">\n<meta name=\"description\" content=\"Cleaning up META and LINK tags\">\n<meta name=\"excerpt\" content=\"Actually, I just wanted to add ... [more text]\"\n\n\n      More Info:\n      whatwg.org: HTML Standard - Standard metadata names\n      meta property=”og: …”Open Graph, and thus the og: meta tags, is an invention of Facebook, but is now very widespread, open source and has become a near-standard. It defines attributes that make an object, in this case a web page, an object in a social graph. We already know url, title and description from other meta tags, which are repeated here but enriched with additional attributes. I find og:image as a very useful way of specifying a representation image that is displayed as a visual equivalent when linking to a Facebook or Mastodon post, for example.\n<meta property=\"og:site_name\" content=\"kiko.io\">\n<meta property=\"og:type\" content=\"blog\">\n<meta property=\"og:url\" content=\"https://kiko.io/post/Head-Care/\">\n<meta property=\"og:title\" content=\"Head Care - kiko.io\">\n<meta property=\"og:description\" content=\"Cleaning up META and LINK tags\">\n<meta property=\"og:logo\" content=\"https://kiko.io/images/icon-192x192.png\" />\n<meta property=\"og:image\" content=\"https://kiko.io/images/social-media/Head-Care.png\">\n<meta property=\"og:locale\" content=\"en_US\">\n\n\n      More Info:\n      The Open Graph protocol\n      meta property=”twitter: …”The so-called Twitter Card Tags were a kind of counter-design from Twitter to Facebook’s Open Graph and generally complement it today. I don’t really fancy anything that comes out of Elon Musk’s social media toy shop any more, but for the sake of tradition and to remain compatible, I’m leaving them in as they are.\nWhat do you think? Should they be taken out?\n<meta property=\"twitter:card\" content=\"summary_large_image\">\n<meta property=\"twitter:url\" content=\"https://kiko.io/post/Head-Care/\">\n<meta property=\"twitter:title\" content=\"Head Care - kiko.io\">\n<meta property=\"twitter:description\" content=\"Cleaning up META and LINK tags\">\n<meta property=\"twitter:image\" content=\"https://kiko.io/images/social-media/Head-Care.png\">\n\n\n      More Info:\n      Twitter Developer Platform: Getting started with Cards\n      link rel=”license”I have copied these two tags from Matthias Pfefferle’s notizBlog. I think it’s good to make it machine-readable under which conditions the output of my brain and fingers can be used by others. Until now, I only had a corresponding badge with a link on my photos page.\n<link rel=\"license\" href=\"https://creativecommons.org/licenses/by-sa/4.0/\" type=\"text/html\" />\n<link rel=\"license\" href=\"https://creativecommons.org/licenses/by-sa/4.0/rdf\" type=\"application/rdf+xml\" />\n\n\n      More Info:\n      CreativeCommons: CC REL by ExampleMicroformats Wiki: rel=\"license\"\n      meta name=”author”So that everyone knows who is responsible by name for what you are forced to read here, there is this tag. However, there is always discussion as to whether this should be the web creator or the author of the text. In my case, it doesn’t make any difference.\n<meta name=\"author\" content=\"Kristof Zerbe\">\n\n\n      More Info:\n      whatwg.org: HTML Standard - Standard metadata names\n      meta name=”fediverse:creator”Here’s the newest kid in town … launched by the creators of Mastodon to make journalists and others in the writing world more visible. It allows authors who work with multiple publishers or platforms to link directly to their presence in the Fediverse and thereby connecting the users to the person itself. Syndicated posts from platforms that support the new feature will have a link to the author’s handle below the post. I don’t really need that thing, but it’s neat and who knows what else the Fedi people will come up with.\n<meta name=\"fediverse:creator\" content=\"@kiko@indieweb.social\">\n\n\n      More Info:\n      Mastodon Blog - Eugen Rochko: Highlighting journalism on MastodonChris McLeod: Adding the New Mastodon Link Attribution Meta Tag\n      link rel=”me”I use these tags to link my blog to my other identities/profile pages on the web to show that the same person is represented on both sides. A simple identity verification, which is also the foundation for IndieWeb authentication services such as IndieAuth, as used on webmention.io, for example. With the additional authn I select which providers are considered for authentication. Mastodon uses this for the green tick in the profile also.\n<link rel=\"me\" href=\"https://indieweb.social/@kiko\">\n<link rel=\"me authn\" href=\"https://github.com/kristofzerbe\">\n<link rel=\"me authn\" href=\"mailto:kristof.zerbe@gmail.com\">\n\n\n      More Info:\n      IndieWeb: rel-meMicroformats Wiki: RelMeAuthauth.hawx.me: relme-auth - Sign in with your domain\n      link rel=”webmention | pingback”This blog is a static one and lives on GitHub Pages, i.e. there is no reactive component in the background that could respond to any kind of request, apart from retrieving pages. However, if someone wants to send me a so-called Webmention (or a slightly older Pingback), someone should answer and in my case this is the fabulous Webmention.io service from Aaron Parecki and I let all requesters know this, with these two tags.\n<link rel=\"webmention\" href=\"https://webmention.io/kiko.io/webmention\" />\n<link rel=\"pingback\" href=\"https://webmention.io/kiko.io/xmlrpc\" />\n\n\n      More Info:\n      IndieWeb: WebmentionJan Monschke: Adding webmentions to your static blog(myself): Hexo and the IndieWeb (Receiving Webmentions)\n      link rel=”blogroll”Now let’s get to the main reason for this post … (see introduction above). I’ve had a lot of fun implementing my own blogroll into my SSG Hexo over the last few weeks and the news that someone is trying to bring the many blogrolls on the web together is exciting. No one knows exactly what that might look like yet, but it’s like Dan Q. says:\n\nNow all we need is some tools that can do such detection!\n\n\n<link rel=\"blogroll\" type=\"text/xml\" href=\"https://kiko.io/blogroll.xml\" title=\"kiko.io&#39;s Blogroll\">\n\n\n      More Info:\n      Dan Q.: link rel=\"blogroll\"opml.org (Dave Winer): About blogrolls\n      link rel=”search”Last year I integrated a search via Pagefind into this blog and thus made myself a little less dependent on Google. What I forgot to do is to technically explain to a search engine how my search mechanism can be used so that the user can go directly from the search to my search results. This can be done via an XML file in OpenSearch description format\n<link rel=\"search\" type=\"application/opensearchdescription+xml\" href=\"https://kiko.io/opensearch.xml\" title=\"kiko.io\"/>\n\n\n      More Info:\n      Arthur Denner: How to implement a search shortcut (OpenSearch) on any websiteMicrosoft Learn: Creating an OpenSearch Description File in Windows Federated SearchMDN Web Docs: OpenSearch description format\n      script type=”application/ld+json”Of course, my head element also contains the JSON-LD script that I wrote about over a year ago and which I suspect will basically replace the meta and link tag world in the long run with regard to search engines, because it’s simply better structured and can probably be processed more easily as the stuff above.\n<script type=\"application/ld+json\">{ \"@context\":\"http://schema.org/\", ... [more code] }</script>\n\n\n      More Info:\n      Google Search Central: Introduction to structured data markup in Google Search(myself): Provide Blog Metadata via JSON-LD\n      link rel=”alternate”It’s always good to make things easy for your users. This also applies to finding a feed on a website, in whatever form. For the so-called feed autodiscovery specified in HTML5, alternate link tags with the corresponding MIME type are used. I have integrated several different feeds (Atom, RSS, JSON and HTML) on my site and placed the variants with the complete text in the autodiscovery.\nWhat appeals to me now is what Dan Q. brought up in the post in the introduction to this article: .well-known/feeds. Let’s see if I can tinker with it tonight or tomorrow …\n<link rel=\"alternate\" type=\"application/atom+xml\" href=\"https://kiko.io/atom.xml\" title=\"kiko.io&#39;s Atom Feed (Full Content)\">\n<link rel=\"alternate\" type=\"application/rss+xml\" href=\"https://kiko.io/rss.xml\" title=\"kiko.io&#39;s RSS Feed (Full Content)\">\n<link rel=\"alternate\" type=\"application/json\" href=\"https://kiko.io/feed.json\" title=\"kiko.io&#39;s JSON Feed (Full Content)\">\n<link rel=\"alternate\" type=\"application/mf2+html\" href=\"https://kiko.io/feeds/index.html\" title=\"kiko.io&#39;s HTML Microformats Feed (Excerpt)\">\n\n\n      More Info:\n      The WHATWG Blog: Feed Autodiscoverywhatwg.org: HTML Standard - Link type \"alternate\"Microformats Wiki: rel-alternateJim Nielsen: Making Your RSS Feeds Automatically Discoverable\n      link rel=”manifest”Is a blog an app? I think so. An app for reading stuff. That’s why it makes sense for me to technically raise my blog to the same level as WebApps/PWA’s by offering a corresponding manifest, that shows the browser how to install kiko.io on the system, if the user want to.\n<link rel=\"manifest\" href=\"/manifest.json\">\n\n\n      More Info:\n      MDN Web Docs: Web app manifests\n      link rel=”icon | apple-touch-icon”In addition to the information on the manifest, which already contains pretty much all the information a browser needs to display the website nicely on his OS, this classic is part of the standard repertoire and should not be missing. Nothing is duller than a browser tab without an icon. Since Apple always does everything a little differently, a PNG image should be provided for iOS.\nAs with all resources, relative paths are useful here so that the site is also displayed correctly during local development.\n<link rel=\"icon\" href=\"/favicon.ico\">\n<link rel=\"apple-touch-icon\" href=\"/images/apple-touch-icon.png\">\n\n\n      More Info:\n      W3C: How to Add a Favicon to your Sitewebhint: Use Apple Touch Icon\n      meta name=”theme-color”This tag is similar to the icon and can also be found in the manifest, but it is not a bad idea to tell the browser the desired color for the environment in this way too.\n<meta name=\"theme-color\" content=\"#444\">\n\n\n      More Info:\n      MDN Web Docs: theme-color\n      meta name=”color-scheme”The color-scheme tag points in a slightly different direction than the previous one. It can be used to specify whether and which color scheme the website supports: light or dark or both. I am a great advocate of individual theme switches, but for this you first have to implement and offer two different themes in the CSS. This tag makes the presence of these known to the browser.\nI have also used the tag so far and built a theme switch around it, but I have overlooked one thing:\n\nProviding both keywords indicates that the first scheme is preferred (by the author), but the second is also acceptable if the user prefers it instead.\n\nI’ve defined them the wrong way round so far, as I’m not a fan of dark themes and prefer the light ones.\n<meta name=\"color-scheme\" content=\"light dark\">\n\n\n      More Info:\n      web.dev (Thomas Steiner): Improved dark mode default styling with the color-scheme CSS property and the corresponding meta tag\n      link rel=”preload”I use special web fonts and an individual photo for each page. To preload these files before they are actually used, it makes sense to use the PRELOAD link, which tells the browser: “Hey, I’m going to need this anyway. Load it now”.\nIt is essential to inform the browser of the correct MIME type of the resource and to indicate the specific class via the as attribute. The additional attribute crossorigin is only required if the resource is not located on your own server, as it is then retrieved using a CORS request.\n<link rel=\"preload\" as=\"font\" type=\"font/woff2\" href=\"/css/fonts/lexend/webfonts/Lexend-ExtraLight.woff2\">\n...\n<link rel=\"preload\" as=\"image\" type=\"image/jpeg\" href=\"/images/social-media/Head-Care.png\" imagesrcset=\"/images/social-media/Head-Care.png 480w, /images/social-media/Head-Care.png 768w\">\n\n\n      More Info:\n      MDN Web Doc: rel=preloadwhatwg.org: HTML Standard - Link type \"preload\"\n      link rel=”stylesheet”Yes, of course. For the sake of completeness, I have to mention the links via which the CSS is loaded into the page as an external resource also. Without these, the web would look dull and empty.\n<link rel=\"stylesheet\" href=\"/css/dist/asset-bundle.min.css\">\n<link rel=\"stylesheet\" href=\"/css/style.css\">\n\n\n      More Info:\n      MDN Web Docs: The External Resource Link elementfreeCodeCamp: How to Link CSS to HTML – Stylesheet File Linking\n      ConclusionSmall cause, big effect. I learnt a lot from refactoring my HEAD and I have to admit that I’m tempted to take a closer look at all those extensions. I would at least be satified, if the work I have done here, can also improve your header a little.\nHappy Coding :)"
    },
    "mention-of": "https://janmonschke.com/adding-webmentions-to-your-static-blog/",
    "wm-property": "mention-of",
    "wm-private": false,
    "rels": {
      "canonical": "https://kiko.io/post/Head-Care/"
    }
  },
  {
    "type": "entry",
    "author": {
      "type": "card",
      "name": "Lloyd Atkinson",
      "photo": "",
      "url": "https://www.lloydatkinson.net/"
    },
    "url": "https://www.lloydatkinson.net/notes/19/",
    "published": "2024-10-06T23:06:22",
    "wm-received": "2024-10-06T23:38:40Z",
    "wm-id": 1850870,
    "wm-source": "https://www.lloydatkinson.net/notes/19/",
    "wm-target": "https://janmonschke.com/adding-webmentions-to-your-static-blog/",
    "wm-protocol": "webmention",
    "name": "Note #19",
    "content": {
      "html": "<p>This is a list of everything I read while researching and implementing <a href=\"https://indieweb.org/Webmention\">Webmentions</a> in no particular order:</p>\n<ul><li><a href=\"https://indiewebify.me/\">IndieWebify.Me - a guide to getting you on the IndieWeb</a></li>\n<li><a href=\"https://randomgeekery.org/post/2020/11/using-the-webmentionio-api/\">Using the Webmention.io API : Random Geekery</a></li>\n<li><a href=\"https://sia.codes/posts/webmentions-eleventy-in-depth/\">An In-Depth Tutorial of Webmentions + Eleventy</a></li>\n<li><a href=\"https://janmonschke.com/adding-webmentions-to-your-static-blog/\">Adding webmentions to your static blog | Jan Monschke</a></li>\n<li><a href=\"https://mxb.dev/blog/using-webmentions-on-static-sites/\">Using Webmentions in Eleventy | Max Böck</a></li>\n<li><a href=\"https://rknight.me/blog/adding-webmentions-to-your-site/\">Adding Webmentions to Your Site • Robb Knight</a></li>\n<li><a href=\"https://ahmad.build/setting-up-webmention-with-cloudflare-and-astrojs/\">Setting up webmention with Cloudflare and AstroJS - ahmad.build</a></li>\n<li><a href=\"https://deloughry.co.uk/posts/integrating-webmentions-with-next-js/\">Integrating Webmentions with Next.JS • Deloughry.co.uk</a></li>\n<li><a href=\"https://aboutmonica.com/blog/getting-started-with-webmention-next-js/\">Getting Started With Webmention and NextJS</a></li>\n</ul><h4>Further reading</h4>\n<ul><li><a href=\"https://jamesg.blog/2020/10/02/displaying-webmentions-on-my-site/\">Displaying Webmentions on My Site | James’ Coffee Blog</a> (there’s lots of other webmention posts here too)</li>\n<li><a href=\"https://jamesg.blog/2021/10/19/reply-context/\">Adding reply context to my social pages | James’ Coffee Blog</a></li>\n<li><a href=\"https://werd.io/2022/the-fediverse-and-the-indieweb\">The fediverse and the indieweb</a></li>\n<li><a href=\"https://abhas.io/indieweb-primer/\">IndieWeb - A Primer | Not Someobody Else’s Problem - Mine. IndieWeb - A Primer | Not Someobody Else’s Problem - Mine.</a></li>\n<li><a href=\"https://lordmatt.co.uk/technology/the-internet/lets-talk-about-making-indieweb-weirder-and-easier/\">Let’s talk about making IndieWeb weirder and easier</a></li>\n<li><a href=\"https://www.kickscondor.com/wars-of-conflicting-webs/\">Wars of Conflicting Webs</a></li>\n<li><a href=\"https://aaronparecki.com/2022/12/16/24/activitypub\">You’re not wrong. The problem is the ActivityPub spec by itself doesn’t give you enough to implement a working system, and Mastodon filled in the rest with decisions they made on their own. So what actually exists is mostly a Mastodon-specific protocol built on the ActivityPub framework.</a></li>\n</ul><h4>External services I’m using</h4>\n<ul><li><a href=\"https://brid.gy/\">Bridgy</a> - Most sites do not send webmentions, so Bridgy fills this gap by automatically scanning various social sites and then sending a webmention to your site.</li>\n<li><a href=\"https://webmention.io/\">Webmention.io</a> - My site is a static site, and I don’t want to host or implement a Webmention receiver myself. This external service is the webmention receiver. I can include some HTML that tells Bridgy to call that.</li>\n</ul><h4>Displaying WebMentions</h4>\n<p>There’s a lot of ways the various types of webmentions can be displayed visually. However, there are specific semantic patterns via microformat classes that should be used. Many sites seem to skip this unfortunately. The indieweb wiki fortunately gives several examples where this is doing correctly.</p>\n<ul><li><a href=\"https://indieweb.org/comments\">comments - IndieWeb</a></li>\n<li><a href=\"https://indieweb.org/likes\">likes - IndieWeb</a></li>\n<li><a href=\"https://indieweb.org/reposts\">reposts - IndieWeb</a></li>\n</ul><p>The general format for all of these are as follows. Notice usage of <code>h-entry</code>, <code>p-author</code>, <code>h-cite</code>, <code>u-comment</code>, etc.</p>\n<pre><code><span>&lt;div</span><span> </span><span>class</span><span>=</span><span>\"h-entry\"</span><span>&gt;</span><span>    </span><span>&lt;h1</span><span> </span><span>class</span><span>=</span><span>\"p-name\"</span><span>&gt;</span><span>The Main Entry</span><span>&lt;/h1&gt;</span><span>    </span><span>&lt;p</span><span> </span><span>class</span><span>=</span><span>\"p-author h-card\"</span><span>&gt;</span><span>John Smith</span><span>&lt;/p&gt;</span><span>    </span><span>&lt;p</span><span> </span><span>class</span><span>=</span><span>\"e-content\"</span><span>&gt;</span><span>A few insights I've had:</span><span>&lt;/p&gt;</span><span>    </span><span>&lt;h2&gt;</span><span>Comments</span><span>&lt;/h2&gt;</span><span>    </span><span>&lt;div</span><span> </span><span>class</span><span>=</span><span>\"u-comment h-cite\"</span><span>&gt;</span><span>        </span><span>&lt;a</span><span> </span><span>class</span><span>=</span><span>\"u-author h-card\"</span><span> </span><span>href</span><span>=</span><span>\"http://jane.example.com/\"</span><span>&gt;</span><span><span>            </span></span><span>Jane Bloggs</span><span>        </span><span>&lt;/a&gt;</span><span>        </span><span>&lt;p</span><span> </span><span>class</span><span>=</span><span>\"p-content p-name\"</span><span>&gt;</span><span>Ha ha ha great article John.</span><span>&lt;/p&gt;</span><span>        </span><span>&lt;a</span><span> </span><span>class</span><span>=</span><span>\"u-url\"</span><span> </span><span>href</span><span>=</span><span>\"http://jane.example.com/c12\"</span><span>&gt;</span><span>            </span><span>&lt;time</span><span> </span><span>class</span><span>=</span><span>\"dt-published\"</span><span>&gt;</span><span>2015-07-12 HH:MM</span><span>&lt;/time&gt;</span><span>        </span><span>&lt;/a&gt;</span><span>    </span><span>&lt;/div&gt;</span><span>    </span><span>&lt;div</span><span> </span><span>class</span><span>=</span><span>\"u-comment h-cite\"</span><span>&gt;</span><span>        </span><span>&lt;a</span><span> </span><span>class</span><span>=</span><span>\"u-author h-card\"</span><span> </span><span>href</span><span>=</span><span>\"http://kim.example.net\"</span><span>&gt;</span><span><span>            </span></span><span>Kim Codes</span><span>        </span><span>&lt;/a&gt;</span><span>        </span><span>&lt;p</span><span> </span><span>class</span><span>=</span><span>\"p-content p-name\"</span><span>&gt;</span><span>What were the insights?</span><span>&lt;/p&gt;</span><span>        </span><span>&lt;a</span><span> </span><span>class</span><span>=</span><span>\"u-url\"</span><span> </span><span>href</span><span>=</span><span>\"http://kim.example.net/k23\"</span><span>&gt;</span><span>            </span><span>&lt;time</span><span> </span><span>class</span><span>=</span><span>\"dt-published\"</span><span>&gt;</span><span>2015-07-12 HH:MM</span><span>&lt;/time&gt;</span><span>        </span><span>&lt;/a&gt;</span><span>    </span><span>&lt;/div&gt;</span><span>&lt;/div&gt;</span></code></pre>\n<p>Another example, this time of likes:</p>\n<pre><code><span>&lt;li</span><span> </span><span>class</span><span>=</span><span>\"p-like h-cite\"</span><span>&gt;</span><span>    </span><span>&lt;a</span><span> </span><span>href</span><span>=</span><span>\"https://instagram.com/p/4CPkIKDckd/#liked-by-341817\"</span><span> </span><span>class</span><span>=</span><span>\"u-url\"</span><span>&gt;</span><span>        </span><span>&lt;span</span><span> </span><span>class</span><span>=</span><span>\"p-author h-card\"</span><span>&gt;</span><span>            </span><span>&lt;img</span><span>                </span><span>class</span><span>=</span><span>\"u-photo\"</span><span>                </span><span>src</span><span>=</span><span>\"https://pkcdn.xyz/igcdn-photos-b-a.akamaihd.net/ae05b7dcc1946a0f6c26ff1d293e41122f532dff7d778152b30a4229ac1db68d.jpeg\"</span><span>                </span><span>data-src</span><span>=</span><span>\"https://pkcdn.xyz/igcdn-photos-b-a.akamaihd.net/ae05b7dcc1946a0f6c26ff1d293e41122f532dff7d778152b30a4229ac1db68d.jpeg\"</span><span>                </span><span>height</span><span>=</span><span>\"36\"</span><span>`</span><span>            </span><span>/&gt;</span><span>        </span><span>&lt;/span&gt;</span><span>    </span><span>&lt;/a&gt;</span><span>    </span><span>&lt;a</span><span> </span><span>style</span><span>=</span><span>\"display:none;\"</span><span> </span><span>class</span><span>=</span><span>\"p-name u-url\"</span><span> </span><span>href</span><span>=</span><span>\"http://instagram.com/strangeways\"</span><span>&gt;</span><span><span>        </span></span><span>Ankur</span><span>    </span><span>&lt;/a&gt;</span><span>&lt;/li&gt;</span></code></pre>\n<h4>Debugging and other stuff</h4>\n<ul><li><a href=\"https://dev.to/shindakun/webmentions-are-great-mostly-21i\">Webmentions are Great (Mostly)</a> - As webmentions and the various implementations and tools being somewhat open ended and not consistent, some badly formatted webmentions can be sent (in this case from a poorly written Wordpress plugin, surprise…). Need to ensure this sort of sanity checking is applied; “empty” replies with an emoji should be handled.</li>\n</ul><p>The webmentions for this note look like this. Here is an early experiment with fetching and displaying webmentions in Astro:</p>",
      "text": "This is a list of everything I read while researching and implementing Webmentions in no particular order:\nIndieWebify.Me - a guide to getting you on the IndieWeb\nUsing the Webmention.io API : Random Geekery\nAn In-Depth Tutorial of Webmentions + Eleventy\nAdding webmentions to your static blog | Jan Monschke\nUsing Webmentions in Eleventy | Max Böck\nAdding Webmentions to Your Site • Robb Knight\nSetting up webmention with Cloudflare and AstroJS - ahmad.build\nIntegrating Webmentions with Next.JS • Deloughry.co.uk\nGetting Started With Webmention and NextJS\nFurther reading\nDisplaying Webmentions on My Site | James’ Coffee Blog (there’s lots of other webmention posts here too)\nAdding reply context to my social pages | James’ Coffee Blog\nThe fediverse and the indieweb\nIndieWeb - A Primer | Not Someobody Else’s Problem - Mine. IndieWeb - A Primer | Not Someobody Else’s Problem - Mine.\nLet’s talk about making IndieWeb weirder and easier\nWars of Conflicting Webs\nYou’re not wrong. The problem is the ActivityPub spec by itself doesn’t give you enough to implement a working system, and Mastodon filled in the rest with decisions they made on their own. So what actually exists is mostly a Mastodon-specific protocol built on the ActivityPub framework.\nExternal services I’m using\nBridgy - Most sites do not send webmentions, so Bridgy fills this gap by automatically scanning various social sites and then sending a webmention to your site.\nWebmention.io - My site is a static site, and I don’t want to host or implement a Webmention receiver myself. This external service is the webmention receiver. I can include some HTML that tells Bridgy to call that.\nDisplaying WebMentions\nThere’s a lot of ways the various types of webmentions can be displayed visually. However, there are specific semantic patterns via microformat classes that should be used. Many sites seem to skip this unfortunately. The indieweb wiki fortunately gives several examples where this is doing correctly.\ncomments - IndieWeb\nlikes - IndieWeb\nreposts - IndieWeb\nThe general format for all of these are as follows. Notice usage of h-entry, p-author, h-cite, u-comment, etc.\n<div class=\"h-entry\">    <h1 class=\"p-name\">The Main Entry</h1>    <p class=\"p-author h-card\">John Smith</p>    <p class=\"e-content\">A few insights I've had:</p>    <h2>Comments</h2>    <div class=\"u-comment h-cite\">        <a class=\"u-author h-card\" href=\"http://jane.example.com/\">            Jane Bloggs        </a>        <p class=\"p-content p-name\">Ha ha ha great article John.</p>        <a class=\"u-url\" href=\"http://jane.example.com/c12\">            <time class=\"dt-published\">2015-07-12 HH:MM</time>        </a>    </div>    <div class=\"u-comment h-cite\">        <a class=\"u-author h-card\" href=\"http://kim.example.net\">            Kim Codes        </a>        <p class=\"p-content p-name\">What were the insights?</p>        <a class=\"u-url\" href=\"http://kim.example.net/k23\">            <time class=\"dt-published\">2015-07-12 HH:MM</time>        </a>    </div></div>\nAnother example, this time of likes:\n<li class=\"p-like h-cite\">    <a href=\"https://instagram.com/p/4CPkIKDckd/#liked-by-341817\" class=\"u-url\">        <span class=\"p-author h-card\">            <img                class=\"u-photo\"                src=\"https://pkcdn.xyz/igcdn-photos-b-a.akamaihd.net/ae05b7dcc1946a0f6c26ff1d293e41122f532dff7d778152b30a4229ac1db68d.jpeg\"                data-src=\"https://pkcdn.xyz/igcdn-photos-b-a.akamaihd.net/ae05b7dcc1946a0f6c26ff1d293e41122f532dff7d778152b30a4229ac1db68d.jpeg\"                height=\"36\"`            />        </span>    </a>    <a style=\"display:none;\" class=\"p-name u-url\" href=\"http://instagram.com/strangeways\">        Ankur    </a></li>\nDebugging and other stuff\nWebmentions are Great (Mostly) - As webmentions and the various implementations and tools being somewhat open ended and not consistent, some badly formatted webmentions can be sent (in this case from a poorly written Wordpress plugin, surprise…). Need to ensure this sort of sanity checking is applied; “empty” replies with an emoji should be handled.\nThe webmentions for this note look like this. Here is an early experiment with fetching and displaying webmentions in Astro:"
    },
    "mention-of": "https://janmonschke.com/adding-webmentions-to-your-static-blog/",
    "wm-property": "mention-of",
    "wm-private": false,
    "rels": {
      "canonical": "https://www.lloydatkinson.net/notes/19/"
    }
  },
  {
    "type": "entry",
    "author": {
      "type": "card",
      "name": "Francesco Schwarz",
      "photo": "https://avatars.webmention.io/isellsoap.net/1cab1214aeaca927b4a314ba4e6b501ce34b873e5de35e853cc31201df73c8aa.jpg",
      "url": ""
    },
    "url": "https://isellsoap.net/likes/2025-05-22-14-03-45/",
    "published": "2025-05-22T14:03:45+02:00",
    "wm-received": "2025-05-22T12:06:14Z",
    "wm-id": 1912769,
    "wm-source": "https://isellsoap.net/likes/2025-05-22-14-03-45/",
    "wm-target": "https://janmonschke.com/adding-webmentions-to-your-static-blog/",
    "wm-protocol": "webmention",
    "content": {
      "html": "<p>Great overview of how to integrate webmentions.</p>",
      "text": "Great overview of how to integrate webmentions."
    },
    "like-of": "https://janmonschke.com/adding-webmentions-to-your-static-blog/",
    "wm-property": "like-of",
    "wm-private": false,
    "rels": {
      "canonical": "https://isellsoap.net/likes/2025-05-22-14-03-45/"
    }
  }
]